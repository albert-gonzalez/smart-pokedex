{"version":3,"sources":["src/components/Navigation/routes.ts","src/api/apolloClient.ts","src/styles/variables.ts","src/components/Navigation/rootNavigation.ts","src/components/Header/Header.tsx","src/components/Card/Card.tsx","src/components/List/SectionList.tsx","src/components/Pokemon/FlavorTexts.tsx","src/mappers/pokemon.ts","src/styles/common.ts","src/components/Loading/Loading.tsx","src/components/Pokemon/Data.ts","src/components/Pokemon/PokemonCard.tsx","src/components/Explore/Search.tsx","src/components/Explore/Explore.tsx","src/components/Pokemon/PokemonOfTheDay.tsx","src/storage/storage.ts","App.tsx","assets/loading.png","assets/star.png","assets/star-gray.png","assets/search.png","assets/search-gray.png"],"names":["Routes","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","name","version","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","colors","fontSizes","navigationRef","React","navigate","params","current","openPokemonScreen","pokemon","navigator","push","Pokemon","Explore","screen","Header","useState","searchInputText","setSearchInputText","ref","useRef","useEffect","addEventListener","searchOnEnter","e","key","debouncedOnSubmitSearch","currentTarget","value","removeEventListener","debouncedOnChangeSearch","useCallback","debounce","text","getCurrentRoute","Search","search","console","log","View","testID","style","styles","bar","TextInput","input","placeholder","onChangeText","onSubmitEditing","nativeEvent","autoCorrect","autoCompleteType","returnKeyType","StyleSheet","create","height","padding","display","alignItems","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","borderRadius","paddingVertical","paddingHorizontal","flex","Card","children","card","overflow","shadowOffset","width","shadowColor","marginBottom","SectionList","sections","native","keyExtractor","item","index","renderItem","renderSectionHeader","title","section","Text","disableVirtualization","ViewList","filter","data","length","map","items","Item","itemStyles","evenItem","oddItem","hasField","field","valueStyle","fullWidthValue","itemTexts","undefined","itemContent","onClick","TouchableHighlight","onPress","underlayColor","Items","baseItemStyles","color","textTransform","fontSize","sectionList","marginVertical","fontWeight","FlavorTexts","flavorTexts","TextList","storedTexts","textList","isAlreadyStored","includes","flavor","flavorText","FlavorText","paddingTop","lineHeight","textAlign","mapPokemonToItem","changePokemon","getNameWithNum","num","species","filterPokemonByNumAndMapToItem","pokemonGenerations","numberSearch","flatMap","generation","commonViewStyles","commonStyles","scrollView","listView","view","centeredView","justifyContent","Loading","spinValue","Animated","Value","loop","timing","toValue","duration","easing","Easing","linear","useNativeDriver","start","spin","interpolate","inputRange","outputRange","Image","icon","transform","rotate","source","require","getEvolutions","evolutions","evolution","getPreEvolutions","preevolutions","preevoluton","types","GET_POKEMON_DETAILS_BY_NUM","gql","PokemonCard","useNavigation","useIsFocused","scrollTo","y","useQuery","variables","loading","error","getPokemonDetailsByNumber","list","weight","join","baseStats","hp","attack","defense","speed","specialattack","specialdefense","baseStatsTotal","abilities","first","second","special","hidden","getPokemonData","number","ScrollView","imageViewer","image","sprite","backSprite","resizeMode","margin","SEARCH_POKEMON_QUERY","openPokemon","allPokemon","useMemo","mapGenerationsToSections","useLazyQuery","searchPokemon","called","renderPokemonList","parseInt","isNaN","pokemonByNumber","searchText","pokemonByType","toLocaleLowerCase","toLowerCase","filterPokemonByTypeAndMapToItem","queryResultsAndPokemonByType","getDexEntries","baseSpecies","concat","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","component","SearchScreen","PokemonScreen","route","PokemonOfTheDay","isFocused","pokemonOfTheDay","setPokemonOfTheDay","getPokemonOfTheDay","then","storePokemonOfTheDay","a","async","JSON","stringify","date","Date","toDateString","AsyncStorage","setItem","getItem","parsedData","parse","randomPokemonNum","Math","round","random","ExploreScreen","PokemonOfTheDayScreen","Tab","createBottomTabNavigator","App","StatusBar","animated","NavigationContainer","tabBarOptions","activeBackgroundColor","inactiveBackgroundColor","activeTintColor","borderTopColor","showLabel","sceneContainerStyle","options","tabBarTestID","tabBarIcon","focused","module","exports"],"mappings":"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","file":"static/js/app.25af9ac8.chunk.js","sourcesContent":["export enum Routes {\n  Explore = \"Explore\",\n  PokemonOfTheDay = \"PokemonOfTheDay\",\n  Search = \"Search\",\n  Pokemon = \"Pokemon\",\n}\n","// ApolloClient setup\nimport { ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\n\n// Instantiate required constructor fields\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"https://graphqlpokemon.favware.tech/\",\n});\n\nexport const client = new ApolloClient({\n  // Provide required constructor fields\n  cache: cache,\n  link: link,\n\n  // Provide some optional constructor fields\n  name: \"graphql-pokemon-client\",\n  version: \"1.0\",\n  queryDeduplication: false,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: \"cache-and-network\",\n    },\n  },\n});\n","export const colors = {\n  background: \"#cc0d2d\",\n  stickyBgColor: \"#dc0a2d\",\n  shadow: \"#b30724\",\n  text: \"#ffffff\",\n  imageViewer: \"#bec4a9\",\n};\n\nexport const fontSizes = {\n  xxl: 26,\n  xl: 24,\n  l: 20,\n  m: 18,\n};\n","import * as React from \"react\";\nimport { Routes } from \"./routes\";\n\nexport const navigationRef = React.createRef<any>();\n\nexport const navigate = (name: string, params?: any) => {\n  navigationRef.current?.navigate(name, params);\n};\n\nexport const getCurrentRoute = (): string => {\n  return navigationRef.current?.getCurrentRoute().name ?? \"\";\n};\n\nexport const openPokemonScreen = (pokemon: number, navigator: any) =>\n  navigator.push?.(Routes.Pokemon, { pokemon }) ||\n  navigator.navigate(Routes.Explore, {\n    screen: Routes.Pokemon,\n    params: { pokemon },\n  });\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { TextInput, View } from \"react-native\";\nimport { colors } from \"../../styles/variables\";\nimport { getCurrentRoute, navigate } from \"../Navigation/rootNavigation\";\nimport debounce from \"debounce\";\nimport { Routes } from \"../Navigation/routes\";\n\nexport const Header = () => {\n  const [searchInputText, setSearchInputText] = useState(\"\");\n  const ref: React.MutableRefObject<HTMLElement & TextInput> = useRef(\n    null\n  ) as any;\n\n  useEffect(() => {\n    if (!ref.current?.addEventListener) {\n      return;\n    }\n\n    const searchOnEnter = (e: KeyboardEvent) => {\n      if (e.key === \"Enter\") {\n        debouncedOnSubmitSearch((e.currentTarget as any)?.value);\n      }\n    };\n\n    ref.current.addEventListener(\"keydown\", searchOnEnter);\n\n    return () => ref.current.removeEventListener(\"keydown\", searchOnEnter);\n  }, [ref]);\n\n  const debouncedOnChangeSearch = useCallback(\n    debounce((text: string) => {\n      if (getCurrentRoute() !== Routes.Search) {\n        return;\n      }\n\n      navigate(Routes.Explore, {\n        params: { search: text },\n        screen: Routes.Search,\n      });\n    }, 500),\n    []\n  );\n\n  const debouncedOnSubmitSearch = useCallback(\n    debounce(\n      (text: string) => {\n        console.log(\"eiii\");\n\n        navigate(Routes.Explore, {\n          params: { search: text },\n          screen: Routes.Search,\n        });\n      },\n      10,\n      true\n    ),\n    []\n  );\n\n  return (\n    <View testID=\"header\" style={styles.bar}>\n      <TextInput\n        testID=\"headerSearch\"\n        ref={ref}\n        style={styles.input}\n        placeholder=\"Search Pokémon by number, name or type\"\n        onChangeText={(text) => {\n          setSearchInputText(text);\n          debouncedOnChangeSearch(text);\n        }}\n        onSubmitEditing={(e) => debouncedOnSubmitSearch(e.nativeEvent.text)}\n        autoCorrect={false}\n        autoCompleteType=\"off\"\n        returnKeyType=\"search\"\n        value={searchInputText}\n      ></TextInput>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bar: {\n    height: 60,\n    padding: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: colors.stickyBgColor,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.shadow,\n    flexDirection: \"row\",\n  },\n  input: {\n    height: \"100%\",\n    backgroundColor: \"white\",\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { colors } from \"../../styles/variables\";\n\nexport const Card: React.FC = ({ children }) => (\n  <View style={styles.card}>{children}</View>\n);\n\nconst styles = StyleSheet.create({\n  card: {\n    borderRadius: 10,\n    overflow: \"hidden\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowColor: colors.shadow,\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n    marginBottom: 30,\n  },\n});\n","import * as React from \"react\";\nimport { TextStyle } from \"react-native\";\nimport { TouchableHighlight } from \"react-native\";\nimport {\n  SectionListData,\n  StyleSheet,\n  Text,\n  View,\n  SectionList as NativeSectionList,\n} from \"react-native\";\nimport { colors, fontSizes } from \"../../styles/variables\";\nimport { Card } from \"../Card/Card\";\n\nexport interface Item {\n  field?: string;\n  value: string | number;\n  onClick?: (item: Item) => void;\n}\n\ninterface SectionListInput {\n  sections: SectionListData<Item>[];\n  native?: boolean;\n}\n\nexport const SectionList = ({ sections, native }: SectionListInput) => {\n  return native ? (\n    <NativeSectionList\n      testID=\"list\"\n      sections={sections}\n      keyExtractor={(item, index) => index + \"\"}\n      renderItem={({ item, index }) => <Item item={item} index={index} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.title}>{title}</Text>\n      )}\n      disableVirtualization={true}\n    />\n  ) : (\n    <ViewList sections={sections} />\n  );\n};\n\nconst ViewList = ({ sections }: { sections: SectionListData<Item>[] }) => (\n  <View testID=\"list\">\n    {sections\n      .filter((section) => section.data.length)\n      .map((section) => (\n        <View key={section.title} style={styles.section}>\n          <Text style={styles.title}>{section.title}</Text>\n          <Items items={section.data}></Items>\n        </View>\n      ))}\n  </View>\n);\n\nconst Item = ({ item, index }: { item: Item; index: number }) => {\n  const isEven = index % 2 === 1;\n  const itemStyles = isEven\n    ? [styles.item, styles.evenItem]\n    : [styles.item, styles.oddItem];\n  const hasField = !!item.field;\n  const valueStyle = hasField\n    ? styles.value\n    : [styles.value, styles.fullWidthValue];\n\n  const itemTexts = (\n    <React.Fragment>\n      {hasField ? <Text style={styles.field}>{item.field}</Text> : undefined}\n      <Text style={valueStyle}>{item.value}</Text>\n    </React.Fragment>\n  );\n  const itemContent = item.onClick ? (\n    <TouchableHighlight\n      style={styles.item}\n      onPress={() => item.onClick?.(item)}\n      underlayColor=\"rgba(255, 255, 255, 0.2)\"\n    >\n      {itemTexts}\n    </TouchableHighlight>\n  ) : (\n    itemTexts\n  );\n\n  return (\n    <View key={index} style={itemStyles}>\n      {itemContent}\n    </View>\n  );\n};\n\nconst Items = ({ items }: { items: readonly Item[] }) => (\n  <Card>\n    {items\n      .filter((item) => item.value)\n      .map((item, index) => (\n        <Item key={index} item={item} index={index}></Item>\n      ))}\n  </Card>\n);\n\nconst baseItemStyles: TextStyle = {\n  color: colors.text,\n  display: \"flex\",\n  alignItems: \"center\",\n  paddingHorizontal: 30,\n  paddingVertical: 15,\n  textTransform: \"capitalize\",\n  fontSize: fontSizes.m,\n};\n\nconst styles = StyleSheet.create({\n  sectionList: {\n    color: colors.text,\n  },\n  section: {},\n  title: {\n    fontSize: fontSizes.xl,\n    color: colors.text,\n    marginVertical: 10,\n  },\n  items: {\n    borderRadius: 10,\n    overflow: \"hidden\",\n    shadowOffset: { width: 1, height: 1 },\n    shadowColor: colors.shadow,\n  },\n  item: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n  },\n  field: {\n    ...baseItemStyles,\n    fontWeight: \"bold\",\n    width: \"45%\",\n    color: colors.text,\n    backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n  },\n  evenItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.08)\",\n  },\n  oddItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.04)\",\n  },\n  value: {\n    ...baseItemStyles,\n    color: colors.text,\n    width: \"55%\",\n  },\n  fullWidthValue: {\n    width: \"100%\",\n  },\n});\n","import React from \"react\";\nimport { FlavorEntry } from \"@favware/graphql-pokemon\";\nimport { Text, View } from \"react-native\";\nimport { Card } from \"../Card/Card\";\nimport { StyleSheet } from \"react-native\";\nimport { colors, fontSizes } from \"../../styles/variables\";\n\ninterface FlavorEntries {\n  flavorTexts: readonly FlavorEntry[];\n}\n\nexport const FlavorTexts = ({ flavorTexts }: FlavorEntries) => (\n  <Card>\n    <TextList flavorTexts={flavorTexts} />\n  </Card>\n);\n\nconst TextList = ({ flavorTexts }: FlavorEntries) => {\n  const storedTexts: string[] = [];\n  return (\n    <View style={styles.textList}>\n      {flavorTexts\n        .filter((flavorTexts) => {\n          const isAlreadyStored = storedTexts.includes(flavorTexts.flavor);\n\n          storedTexts.push(flavorTexts.flavor);\n\n          return !isAlreadyStored;\n        })\n        .map((flavorText, index) => (\n          <FlavorText key={index} flavorText={flavorText} />\n        ))}\n    </View>\n  );\n};\n\nconst FlavorText = ({ flavorText }: { flavorText: FlavorEntry }) => (\n  <Text style={styles.text}>{flavorText.flavor}</Text>\n);\n\nconst styles = StyleSheet.create({\n  textList: {\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  text: {\n    color: colors.text,\n    marginBottom: 10,\n    fontSize: fontSizes.m,\n    lineHeight: 22,\n    textAlign: \"justify\",\n  },\n});\n","import { DexDetails, DexEntry } from \"@favware/graphql-pokemon\";\nimport { Item } from \"../components/List/SectionList\";\nimport { Pokemon, PokemonGeneration } from \"../components/Pokemon/Data\";\n\ntype ChangePokemonFunction = (pokemon: number) => void;\n\nexport const mapPokemonToItem = (\n  pokemon: Partial<DexDetails | DexEntry>,\n  changePokemon: any\n): Item => ({\n  value: getNameWithNum(pokemon),\n  onClick: () => changePokemon(pokemon.num),\n});\n\nexport const getNameWithNum = (pokemon: Partial<DexDetails | DexEntry>) =>\n  `${pokemon.num}. ${pokemon.species}`;\n\nexport const mapGenerationsToSections = (\n  pokemonGenerations: PokemonGeneration[],\n  changePokemon: ChangePokemonFunction\n) =>\n  pokemonGenerations.map((generation) => ({\n    title: generation.title,\n    data: generation.data.map((pokemon) =>\n      mapPokemonToItem(pokemon, changePokemon)\n    ),\n  }));\n\nexport const filterPokemonByNumAndMapToItem = (\n  pokemonGenerations: PokemonGeneration[],\n  numberSearch: number,\n  changePokemon: ChangePokemonFunction\n) =>\n  pokemonGenerations\n    .flatMap((generation) => generation.data)\n    .filter((pokemon) => (pokemon.num + \"\").includes(numberSearch + \"\"))\n    .map((pokemon) => mapPokemonToItem(pokemon, changePokemon));\n\nexport const filterPokemonByTypeAndMapToItem = (\n  pokemonGenerations: PokemonGeneration[],\n  search: string,\n  changePokemon: ChangePokemonFunction\n) =>\n  pokemonGenerations\n    .flatMap((generation) => generation.data)\n    .filter((pokemon) =>\n      pokemon.types\n        .join(\", \")\n        .toLocaleLowerCase()\n        .includes(search.toLowerCase())\n    )\n    .map((pokemon) => mapPokemonToItem(pokemon, changePokemon));\n\nexport const filterValidPokemonAndMapToItem = (\n  pokemon: Pokemon[],\n  changePokemon: ChangePokemonFunction\n) =>\n  pokemon\n    .filter((pokemon) => pokemon.num >= 0 && !pokemon.baseSpecies)\n    .map((pokemon) => mapPokemonToItem(pokemon, changePokemon));\n","import { StyleSheet, StyleSheetProperties } from \"react-native\";\nimport { colors } from \"./variables\";\n\nconst commonViewStyles = {\n  backgroundColor: colors.background,\n  padding: 20,\n};\n\nexport const commonStyles = StyleSheet.create({\n  scrollView: {\n    ...commonViewStyles,\n    flex: 1,\n  },\n  listView: {\n    ...commonViewStyles,\n    paddingVertical: 0,\n    paddingHorizontal: 20,\n    flex: 1,\n  },\n  view: {\n    ...commonViewStyles,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  centeredView: {\n    ...commonViewStyles,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n  },\n});\n","import React, { useRef } from \"react\";\nimport { Animated, Easing, Image, StyleSheet, View } from \"react-native\";\nimport { commonStyles } from \"../../styles/common\";\nimport { colors } from \"../../styles/variables\";\n\nexport const Loading = () => {\n  const spinValue = useRef(new Animated.Value(0)).current;\n\n  const timing = Animated.loop(\n    Animated.timing(spinValue, {\n      toValue: 1,\n      duration: 3000,\n      easing: Easing.linear,\n      useNativeDriver: true,\n    })\n  );\n\n  timing.start();\n\n  const spin = spinValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\"0deg\", \"360deg\"],\n  });\n\n  return (\n    <View style={commonStyles.centeredView}>\n      <Animated.Image\n        style={[styles.icon, { transform: [{ rotate: spin }] }]}\n        source={require(\"../../../assets/loading.png\")}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  view: {\n    backgroundColor: colors.background,\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    width: 64,\n    height: 64,\n  },\n});\n","import { DexDetails } from \"@favware/graphql-pokemon\";\nimport { SectionListData } from \"react-native\";\nimport { mapPokemonToItem } from \"../../mappers/pokemon\";\nimport { Item } from \"../List/SectionList\";\n\nexport interface PokemonGeneration {\n  title: string;\n  data: Pokemon[];\n}\n\nexport interface Pokemon {\n  readonly num: number;\n  readonly species: string;\n  readonly types: string[];\n  readonly baseSpecies?: string;\n}\n\nexport const getPokemonData = (\n  pokemon: DexDetails,\n  openPokemonScreen: (number: number) => void\n): SectionListData<Item>[] => {\n  return [\n    {\n      title: \"General\",\n      data: [\n        { field: \"Number\", value: pokemon.num },\n        { field: \"Name\", value: pokemon.species },\n        { field: \"Color\", value: pokemon.color },\n        { field: \"Height\", value: `${pokemon.height} meters` },\n        { field: \"Weight\", value: `${pokemon.weight} Kg.` },\n        { field: \"Types\", value: pokemon.types.join(\", \") },\n      ],\n    },\n    {\n      title: \"Stats\",\n      data: [\n        {\n          field: \"HP\",\n          value: pokemon.baseStats.hp,\n        },\n        { field: \"Attack\", value: pokemon.baseStats.attack },\n        {\n          field: \"Defense\",\n          value: pokemon.baseStats.defense,\n        },\n\n        {\n          field: \"Speed\",\n          value: pokemon.baseStats.speed,\n        },\n        {\n          field: \"Special Attack\",\n          value: pokemon.baseStats.specialattack,\n        },\n        {\n          field: \"Special Defense\",\n          value: pokemon.baseStats.specialdefense,\n        },\n        {\n          field: \"Total\",\n          value: pokemon.baseStatsTotal,\n        },\n      ],\n    },\n    {\n      title: \"Abilities\",\n      data: [\n        { field: \"First\", value: pokemon.abilities.first },\n        {\n          field: \"Second\",\n          value: pokemon.abilities.second as string,\n        },\n        {\n          field: \"Special\",\n          value: pokemon.abilities.special as string,\n        },\n        {\n          field: \"Hidden\",\n          value: pokemon.abilities.hidden as string,\n        },\n      ],\n    },\n    {\n      title: \"Pre-Evolutions\",\n      data: getPreEvolutions(pokemon, openPokemonScreen),\n    },\n    {\n      title: \"Evolutions\",\n      data: getEvolutions(pokemon, openPokemonScreen),\n    },\n  ];\n};\n\nconst getEvolutions = (pokemon: DexDetails, changePokemon: any): Item[] =>\n  pokemon.evolutions?.map((evolution) =>\n    mapPokemonToItem(evolution, changePokemon)\n  ) || [];\n\nconst getPreEvolutions = (pokemon: DexDetails, changePokemon: any): Item[] =>\n  pokemon.preevolutions?.map((preevoluton) =>\n    mapPokemonToItem(preevoluton, changePokemon)\n  ) || [];\n\nexport const pokemonGenerations: PokemonGeneration[] = [\n  {\n    title: \"Generation 1\",\n    data: [\n      { num: 1, species: \"Bulbasaur\", types: [\"Grass\", \"Poison\"] },\n      { num: 2, species: \"Ivysaur\", types: [\"Grass\", \"Poison\"] },\n      { num: 3, species: \"Venusaur\", types: [\"Grass\", \"Poison\"] },\n      { num: 4, species: \"Charmander\", types: [\"Fire\"] },\n      { num: 5, species: \"Charmeleon\", types: [\"Fire\"] },\n      { num: 6, species: \"Charizard\", types: [\"Fire\", \"Flying\"] },\n      { num: 7, species: \"Squirtle\", types: [\"Water\"] },\n      { num: 8, species: \"Wartortle\", types: [\"Water\"] },\n      { num: 9, species: \"Blastoise\", types: [\"Water\"] },\n      { num: 10, species: \"Caterpie\", types: [\"Bug\"] },\n      { num: 11, species: \"Metapod\", types: [\"Bug\"] },\n      { num: 12, species: \"Butterfree\", types: [\"Bug\", \"Flying\"] },\n      { num: 13, species: \"Weedle\", types: [\"Bug\", \"Poison\"] },\n      { num: 14, species: \"Kakuna\", types: [\"Bug\", \"Poison\"] },\n      { num: 15, species: \"Beedrill\", types: [\"Bug\", \"Poison\"] },\n      { num: 16, species: \"Pidgey\", types: [\"Normal\", \"Flying\"] },\n      { num: 17, species: \"Pidgeotto\", types: [\"Normal\", \"Flying\"] },\n      { num: 18, species: \"Pidgeot\", types: [\"Normal\", \"Flying\"] },\n      { num: 19, species: \"Rattata\", types: [\"Normal\"] },\n      { num: 20, species: \"Raticate\", types: [\"Normal\"] },\n      { num: 21, species: \"Spearow\", types: [\"Normal\", \"Flying\"] },\n      { num: 22, species: \"Fearow\", types: [\"Normal\", \"Flying\"] },\n      { num: 23, species: \"Ekans\", types: [\"Poison\"] },\n      { num: 24, species: \"Arbok\", types: [\"Poison\"] },\n      { num: 25, species: \"Pikachu\", types: [\"Electric\"] },\n      { num: 26, species: \"Raichu\", types: [\"Electric\"] },\n      { num: 27, species: \"Sandshrew\", types: [\"Ground\"] },\n      { num: 28, species: \"Sandslash\", types: [\"Ground\"] },\n      { num: 29, species: \"Nidoran♀\", types: [\"Poison\"] },\n      { num: 30, species: \"Nidorina\", types: [\"Poison\"] },\n      { num: 31, species: \"Nidoqueen\", types: [\"Poison\", \"Ground\"] },\n      { num: 32, species: \"Nidoran♂\", types: [\"Poison\"] },\n      { num: 33, species: \"Nidorino\", types: [\"Poison\"] },\n      { num: 34, species: \"Nidoking\", types: [\"Poison\", \"Ground\"] },\n      { num: 35, species: \"Clefairy\", types: [\"Fairy\"] },\n      { num: 36, species: \"Clefable\", types: [\"Fairy\"] },\n      { num: 37, species: \"Vulpix\", types: [\"Fire\"] },\n      { num: 38, species: \"Ninetales\", types: [\"Fire\"] },\n      { num: 39, species: \"Jigglypuff\", types: [\"Normal\", \"Fairy\"] },\n      { num: 40, species: \"Wigglytuff\", types: [\"Normal\", \"Fairy\"] },\n      { num: 41, species: \"Zubat\", types: [\"Poison\", \"Flying\"] },\n      { num: 42, species: \"Golbat\", types: [\"Poison\", \"Flying\"] },\n      { num: 43, species: \"Oddish\", types: [\"Grass\", \"Poison\"] },\n      { num: 44, species: \"Gloom\", types: [\"Grass\", \"Poison\"] },\n      { num: 45, species: \"Vileplume\", types: [\"Grass\", \"Poison\"] },\n      { num: 46, species: \"Paras\", types: [\"Bug\", \"Grass\"] },\n      { num: 47, species: \"Parasect\", types: [\"Bug\", \"Grass\"] },\n      { num: 48, species: \"Venonat\", types: [\"Bug\", \"Poison\"] },\n      { num: 49, species: \"Venomoth\", types: [\"Bug\", \"Poison\"] },\n      { num: 50, species: \"Diglett\", types: [\"Ground\"] },\n      { num: 51, species: \"Dugtrio\", types: [\"Ground\"] },\n      { num: 52, species: \"Meowth\", types: [\"Normal\"] },\n      { num: 53, species: \"Persian\", types: [\"Normal\"] },\n      { num: 54, species: \"Psyduck\", types: [\"Water\"] },\n      { num: 55, species: \"Golduck\", types: [\"Water\"] },\n      { num: 56, species: \"Mankey\", types: [\"Fighting\"] },\n      { num: 57, species: \"Primeape\", types: [\"Fighting\"] },\n      { num: 58, species: \"Growlithe\", types: [\"Fire\"] },\n      { num: 59, species: \"Arcanine\", types: [\"Fire\"] },\n      { num: 60, species: \"Poliwag\", types: [\"Water\"] },\n      { num: 61, species: \"Poliwhirl\", types: [\"Water\"] },\n      { num: 62, species: \"Poliwrath\", types: [\"Water\", \"Fighting\"] },\n      { num: 63, species: \"Abra\", types: [\"Psychic\"] },\n      { num: 64, species: \"Kadabra\", types: [\"Psychic\"] },\n      { num: 65, species: \"Alakazam\", types: [\"Psychic\"] },\n      { num: 66, species: \"Machop\", types: [\"Fighting\"] },\n      { num: 67, species: \"Machoke\", types: [\"Fighting\"] },\n      { num: 68, species: \"Machamp\", types: [\"Fighting\"] },\n      { num: 69, species: \"Bellsprout\", types: [\"Grass\", \"Poison\"] },\n      { num: 70, species: \"Weepinbell\", types: [\"Grass\", \"Poison\"] },\n      { num: 71, species: \"Victreebel\", types: [\"Grass\", \"Poison\"] },\n      { num: 72, species: \"Tentacool\", types: [\"Water\", \"Poison\"] },\n      { num: 73, species: \"Tentacruel\", types: [\"Water\", \"Poison\"] },\n      { num: 74, species: \"Geodude\", types: [\"Rock\", \"Ground\"] },\n      { num: 75, species: \"Graveler\", types: [\"Rock\", \"Ground\"] },\n      { num: 76, species: \"Golem\", types: [\"Rock\", \"Ground\"] },\n      { num: 77, species: \"Ponyta\", types: [\"Fire\"] },\n      { num: 78, species: \"Rapidash\", types: [\"Fire\"] },\n      { num: 79, species: \"Slowpoke\", types: [\"Water\", \"Psychic\"] },\n      { num: 80, species: \"Slowbro\", types: [\"Water\", \"Psychic\"] },\n      { num: 81, species: \"Magnemite\", types: [\"Electric\", \"Steel\"] },\n      { num: 82, species: \"Magneton\", types: [\"Electric\", \"Steel\"] },\n      { num: 83, species: \"Farfetch'd\", types: [\"Normal\", \"Flying\"] },\n      { num: 84, species: \"Doduo\", types: [\"Normal\", \"Flying\"] },\n      { num: 85, species: \"Dodrio\", types: [\"Normal\", \"Flying\"] },\n      { num: 86, species: \"Seel\", types: [\"Water\"] },\n      { num: 87, species: \"Dewgong\", types: [\"Water\", \"Ice\"] },\n      { num: 88, species: \"Grimer\", types: [\"Poison\"] },\n      { num: 89, species: \"Muk\", types: [\"Poison\"] },\n      { num: 90, species: \"Shellder\", types: [\"Water\"] },\n      { num: 91, species: \"Cloyster\", types: [\"Water\", \"Ice\"] },\n      { num: 92, species: \"Gastly\", types: [\"Ghost\", \"Poison\"] },\n      { num: 93, species: \"Haunter\", types: [\"Ghost\", \"Poison\"] },\n      { num: 94, species: \"Gengar\", types: [\"Ghost\", \"Poison\"] },\n      { num: 95, species: \"Onix\", types: [\"Rock\", \"Ground\"] },\n      { num: 96, species: \"Drowzee\", types: [\"Psychic\"] },\n      { num: 97, species: \"Hypno\", types: [\"Psychic\"] },\n      { num: 98, species: \"Krabby\", types: [\"Water\"] },\n      { num: 99, species: \"Kingler\", types: [\"Water\"] },\n      { num: 100, species: \"Voltorb\", types: [\"Electric\"] },\n      { num: 101, species: \"Electrode\", types: [\"Electric\"] },\n      { num: 102, species: \"Exeggcute\", types: [\"Grass\", \"Psychic\"] },\n      { num: 103, species: \"Exeggutor\", types: [\"Grass\", \"Psychic\"] },\n      { num: 104, species: \"Cubone\", types: [\"Ground\"] },\n      { num: 105, species: \"Marowak\", types: [\"Ground\"] },\n      { num: 106, species: \"Hitmonlee\", types: [\"Fighting\"] },\n      { num: 107, species: \"Hitmonchan\", types: [\"Fighting\"] },\n      { num: 108, species: \"Lickitung\", types: [\"Normal\"] },\n      { num: 109, species: \"Koffing\", types: [\"Poison\"] },\n      { num: 110, species: \"Weezing\", types: [\"Poison\"] },\n      { num: 111, species: \"Rhyhorn\", types: [\"Ground\", \"Rock\"] },\n      { num: 112, species: \"Rhydon\", types: [\"Ground\", \"Rock\"] },\n      { num: 113, species: \"Chansey\", types: [\"Normal\"] },\n      { num: 114, species: \"Tangela\", types: [\"Grass\"] },\n      { num: 115, species: \"Kangaskhan\", types: [\"Normal\"] },\n      { num: 116, species: \"Horsea\", types: [\"Water\"] },\n      { num: 117, species: \"Seadra\", types: [\"Water\"] },\n      { num: 118, species: \"Goldeen\", types: [\"Water\"] },\n      { num: 119, species: \"Seaking\", types: [\"Water\"] },\n      { num: 120, species: \"Staryu\", types: [\"Water\"] },\n      { num: 121, species: \"Starmie\", types: [\"Water\", \"Psychic\"] },\n      { num: 122, species: \"Mr. Mime\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 123, species: \"Scyther\", types: [\"Bug\", \"Flying\"] },\n      { num: 124, species: \"Jynx\", types: [\"Ice\", \"Psychic\"] },\n      { num: 125, species: \"Electabuzz\", types: [\"Electric\"] },\n      { num: 126, species: \"Magmar\", types: [\"Fire\"] },\n      { num: 127, species: \"Pinsir\", types: [\"Bug\"] },\n      { num: 128, species: \"Tauros\", types: [\"Normal\"] },\n      { num: 129, species: \"Magikarp\", types: [\"Water\"] },\n      { num: 130, species: \"Gyarados\", types: [\"Water\", \"Flying\"] },\n      { num: 131, species: \"Lapras\", types: [\"Water\", \"Ice\"] },\n      { num: 132, species: \"Ditto\", types: [\"Normal\"] },\n      { num: 133, species: \"Eevee\", types: [\"Normal\"] },\n      { num: 134, species: \"Vaporeon\", types: [\"Water\"] },\n      { num: 135, species: \"Jolteon\", types: [\"Electric\"] },\n      { num: 136, species: \"Flareon\", types: [\"Fire\"] },\n      { num: 137, species: \"Porygon\", types: [\"Normal\"] },\n      { num: 138, species: \"Omanyte\", types: [\"Rock\", \"Water\"] },\n      { num: 139, species: \"Omastar\", types: [\"Rock\", \"Water\"] },\n      { num: 140, species: \"Kabuto\", types: [\"Rock\", \"Water\"] },\n      { num: 141, species: \"Kabutops\", types: [\"Rock\", \"Water\"] },\n      { num: 142, species: \"Aerodactyl\", types: [\"Rock\", \"Flying\"] },\n      { num: 143, species: \"Snorlax\", types: [\"Normal\"] },\n      { num: 144, species: \"Articuno\", types: [\"Ice\", \"Flying\"] },\n      { num: 145, species: \"Zapdos\", types: [\"Electric\", \"Flying\"] },\n      { num: 146, species: \"Moltres\", types: [\"Fire\", \"Flying\"] },\n      { num: 147, species: \"Dratini\", types: [\"Dragon\"] },\n      { num: 148, species: \"Dragonair\", types: [\"Dragon\"] },\n      { num: 149, species: \"Dragonite\", types: [\"Dragon\", \"Flying\"] },\n      { num: 150, species: \"Mewtwo\", types: [\"Psychic\"] },\n      { num: 151, species: \"Mew\", types: [\"Psychic\"] },\n    ],\n  },\n  {\n    title: \"Generation 2\",\n    data: [\n      { num: 152, species: \"Chikorita\", types: [\"Grass\"] },\n      { num: 153, species: \"Bayleef\", types: [\"Grass\"] },\n      { num: 154, species: \"Meganium\", types: [\"Grass\"] },\n      { num: 155, species: \"Cyndaquil\", types: [\"Fire\"] },\n      { num: 156, species: \"Quilava\", types: [\"Fire\"] },\n      { num: 157, species: \"Typhlosion\", types: [\"Fire\"] },\n      { num: 158, species: \"Totodile\", types: [\"Water\"] },\n      { num: 159, species: \"Croconaw\", types: [\"Water\"] },\n      { num: 160, species: \"Feraligatr\", types: [\"Water\"] },\n      { num: 161, species: \"Sentret\", types: [\"Normal\"] },\n      { num: 162, species: \"Furret\", types: [\"Normal\"] },\n      { num: 163, species: \"Hoothoot\", types: [\"Normal\", \"Flying\"] },\n      { num: 164, species: \"Noctowl\", types: [\"Normal\", \"Flying\"] },\n      { num: 165, species: \"Ledyba\", types: [\"Bug\", \"Flying\"] },\n      { num: 166, species: \"Ledian\", types: [\"Bug\", \"Flying\"] },\n      { num: 167, species: \"Spinarak\", types: [\"Bug\", \"Poison\"] },\n      { num: 168, species: \"Ariados\", types: [\"Bug\", \"Poison\"] },\n      { num: 169, species: \"Crobat\", types: [\"Poison\", \"Flying\"] },\n      { num: 170, species: \"Chinchou\", types: [\"Water\", \"Electric\"] },\n      { num: 171, species: \"Lanturn\", types: [\"Water\", \"Electric\"] },\n      { num: 172, species: \"Pichu\", types: [\"Electric\"] },\n      { num: 173, species: \"Cleffa\", types: [\"Fairy\"] },\n      { num: 174, species: \"Igglybuff\", types: [\"Normal\", \"Fairy\"] },\n      { num: 175, species: \"Togepi\", types: [\"Fairy\"] },\n      { num: 176, species: \"Togetic\", types: [\"Fairy\", \"Flying\"] },\n      { num: 177, species: \"Natu\", types: [\"Psychic\", \"Flying\"] },\n      { num: 178, species: \"Xatu\", types: [\"Psychic\", \"Flying\"] },\n      { num: 179, species: \"Mareep\", types: [\"Electric\"] },\n      { num: 180, species: \"Flaaffy\", types: [\"Electric\"] },\n      { num: 181, species: \"Ampharos\", types: [\"Electric\"] },\n      { num: 182, species: \"Bellossom\", types: [\"Grass\"] },\n      { num: 183, species: \"Marill\", types: [\"Water\", \"Fairy\"] },\n      { num: 184, species: \"Azumarill\", types: [\"Water\", \"Fairy\"] },\n      { num: 185, species: \"Sudowoodo\", types: [\"Rock\"] },\n      { num: 186, species: \"Politoed\", types: [\"Water\"] },\n      { num: 187, species: \"Hoppip\", types: [\"Grass\", \"Flying\"] },\n      { num: 188, species: \"Skiploom\", types: [\"Grass\", \"Flying\"] },\n      { num: 189, species: \"Jumpluff\", types: [\"Grass\", \"Flying\"] },\n      { num: 190, species: \"Aipom\", types: [\"Normal\"] },\n      { num: 191, species: \"Sunkern\", types: [\"Grass\"] },\n      { num: 192, species: \"Sunflora\", types: [\"Grass\"] },\n      { num: 193, species: \"Yanma\", types: [\"Bug\", \"Flying\"] },\n      { num: 194, species: \"Wooper\", types: [\"Water\", \"Ground\"] },\n      { num: 195, species: \"Quagsire\", types: [\"Water\", \"Ground\"] },\n      { num: 196, species: \"Espeon\", types: [\"Psychic\"] },\n      { num: 197, species: \"Umbreon\", types: [\"Dark\"] },\n      { num: 198, species: \"Murkrow\", types: [\"Dark\", \"Flying\"] },\n      { num: 199, species: \"Slowking\", types: [\"Water\", \"Psychic\"] },\n      { num: 200, species: \"Misdreavus\", types: [\"Ghost\"] },\n      { num: 201, species: \"Unown\", types: [\"Psychic\"] },\n      { num: 202, species: \"Wobbuffet\", types: [\"Psychic\"] },\n      { num: 203, species: \"Girafarig\", types: [\"Normal\", \"Psychic\"] },\n      { num: 204, species: \"Pineco\", types: [\"Bug\"] },\n      { num: 205, species: \"Forretress\", types: [\"Bug\", \"Steel\"] },\n      { num: 206, species: \"Dunsparce\", types: [\"Normal\"] },\n      { num: 207, species: \"Gligar\", types: [\"Ground\", \"Flying\"] },\n      { num: 208, species: \"Steelix\", types: [\"Steel\", \"Ground\"] },\n      { num: 209, species: \"Snubbull\", types: [\"Fairy\"] },\n      { num: 210, species: \"Granbull\", types: [\"Fairy\"] },\n      { num: 211, species: \"Qwilfish\", types: [\"Water\", \"Poison\"] },\n      { num: 212, species: \"Scizor\", types: [\"Bug\", \"Steel\"] },\n      { num: 213, species: \"Shuckle\", types: [\"Bug\", \"Rock\"] },\n      { num: 214, species: \"Heracross\", types: [\"Bug\", \"Fighting\"] },\n      { num: 215, species: \"Sneasel\", types: [\"Dark\", \"Ice\"] },\n      { num: 216, species: \"Teddiursa\", types: [\"Normal\"] },\n      { num: 217, species: \"Ursaring\", types: [\"Normal\"] },\n      { num: 218, species: \"Slugma\", types: [\"Fire\"] },\n      { num: 219, species: \"Magcargo\", types: [\"Fire\", \"Rock\"] },\n      { num: 220, species: \"Swinub\", types: [\"Ice\", \"Ground\"] },\n      { num: 221, species: \"Piloswine\", types: [\"Ice\", \"Ground\"] },\n      { num: 222, species: \"Corsola\", types: [\"Water\", \"Rock\"] },\n      { num: 223, species: \"Remoraid\", types: [\"Water\"] },\n      { num: 224, species: \"Octillery\", types: [\"Water\"] },\n      { num: 225, species: \"Delibird\", types: [\"Ice\", \"Flying\"] },\n      { num: 226, species: \"Mantine\", types: [\"Water\", \"Flying\"] },\n      { num: 227, species: \"Skarmory\", types: [\"Steel\", \"Flying\"] },\n      { num: 228, species: \"Houndour\", types: [\"Dark\", \"Fire\"] },\n      { num: 229, species: \"Houndoom\", types: [\"Dark\", \"Fire\"] },\n      { num: 230, species: \"Kingdra\", types: [\"Water\", \"Dragon\"] },\n      { num: 231, species: \"Phanpy\", types: [\"Ground\"] },\n      { num: 232, species: \"Donphan\", types: [\"Ground\"] },\n      { num: 233, species: \"Porygon2\", types: [\"Normal\"] },\n      { num: 234, species: \"Stantler\", types: [\"Normal\"] },\n      { num: 235, species: \"Smeargle\", types: [\"Normal\"] },\n      { num: 236, species: \"Tyrogue\", types: [\"Fighting\"] },\n      { num: 237, species: \"Hitmontop\", types: [\"Fighting\"] },\n      { num: 238, species: \"Smoochum\", types: [\"Ice\", \"Psychic\"] },\n      { num: 239, species: \"Elekid\", types: [\"Electric\"] },\n      { num: 240, species: \"Magby\", types: [\"Fire\"] },\n      { num: 241, species: \"Miltank\", types: [\"Normal\"] },\n      { num: 242, species: \"Blissey\", types: [\"Normal\"] },\n      { num: 243, species: \"Raikou\", types: [\"Electric\"] },\n      { num: 244, species: \"Entei\", types: [\"Fire\"] },\n      { num: 245, species: \"Suicune\", types: [\"Water\"] },\n      { num: 246, species: \"Larvitar\", types: [\"Rock\", \"Ground\"] },\n      { num: 247, species: \"Pupitar\", types: [\"Rock\", \"Ground\"] },\n      { num: 248, species: \"Tyranitar\", types: [\"Rock\", \"Dark\"] },\n      { num: 249, species: \"Lugia\", types: [\"Psychic\", \"Flying\"] },\n      { num: 250, species: \"Ho-oh\", types: [\"Fire\", \"Flying\"] },\n      { num: 251, species: \"Celebi\", types: [\"Psychic\", \"Grass\"] },\n    ],\n  },\n  {\n    title: \"Generation 3\",\n    data: [\n      { num: 252, species: \"Treecko\", types: [\"Grass\"] },\n      { num: 253, species: \"Grovyle\", types: [\"Grass\"] },\n      { num: 254, species: \"Sceptile\", types: [\"Grass\"] },\n      { num: 255, species: \"Torchic\", types: [\"Fire\"] },\n      { num: 256, species: \"Combusken\", types: [\"Fire\", \"Fighting\"] },\n      { num: 257, species: \"Blaziken\", types: [\"Fire\", \"Fighting\"] },\n      { num: 258, species: \"Mudkip\", types: [\"Water\"] },\n      { num: 259, species: \"Marshtomp\", types: [\"Water\", \"Ground\"] },\n      { num: 260, species: \"Swampert\", types: [\"Water\", \"Ground\"] },\n      { num: 261, species: \"Poochyena\", types: [\"Dark\"] },\n      { num: 262, species: \"Mightyena\", types: [\"Dark\"] },\n      { num: 263, species: \"Zigzagoon\", types: [\"Normal\"] },\n      { num: 264, species: \"Linoone\", types: [\"Normal\"] },\n      { num: 265, species: \"Wurmple\", types: [\"Bug\"] },\n      { num: 266, species: \"Silcoon\", types: [\"Bug\"] },\n      { num: 267, species: \"Beautifly\", types: [\"Bug\", \"Flying\"] },\n      { num: 268, species: \"Cascoon\", types: [\"Bug\"] },\n      { num: 269, species: \"Dustox\", types: [\"Bug\", \"Poison\"] },\n      { num: 270, species: \"Lotad\", types: [\"Water\", \"Grass\"] },\n      { num: 271, species: \"Lombre\", types: [\"Water\", \"Grass\"] },\n      { num: 272, species: \"Ludicolo\", types: [\"Water\", \"Grass\"] },\n      { num: 273, species: \"Seedot\", types: [\"Grass\"] },\n      { num: 274, species: \"Nuzleaf\", types: [\"Grass\", \"Dark\"] },\n      { num: 275, species: \"Shiftry\", types: [\"Grass\", \"Dark\"] },\n      { num: 276, species: \"Taillow\", types: [\"Normal\", \"Flying\"] },\n      { num: 277, species: \"Swellow\", types: [\"Normal\", \"Flying\"] },\n      { num: 278, species: \"Wingull\", types: [\"Water\", \"Flying\"] },\n      { num: 279, species: \"Pelipper\", types: [\"Water\", \"Flying\"] },\n      { num: 280, species: \"Ralts\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 281, species: \"Kirlia\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 282, species: \"Gardevoir\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 283, species: \"Surskit\", types: [\"Bug\", \"Water\"] },\n      { num: 284, species: \"Masquerain\", types: [\"Bug\", \"Flying\"] },\n      { num: 285, species: \"Shroomish\", types: [\"Grass\"] },\n      { num: 286, species: \"Breloom\", types: [\"Grass\", \"Fighting\"] },\n      { num: 287, species: \"Slakoth\", types: [\"Normal\"] },\n      { num: 288, species: \"Vigoroth\", types: [\"Normal\"] },\n      { num: 289, species: \"Slaking\", types: [\"Normal\"] },\n      { num: 290, species: \"Nincada\", types: [\"Bug\", \"Ground\"] },\n      { num: 291, species: \"Ninjask\", types: [\"Bug\", \"Flying\"] },\n      { num: 292, species: \"Shedinja\", types: [\"Bug\", \"Ghost\"] },\n      { num: 293, species: \"Whismur\", types: [\"Normal\"] },\n      { num: 294, species: \"Loudred\", types: [\"Normal\"] },\n      { num: 295, species: \"Exploud\", types: [\"Normal\"] },\n      { num: 296, species: \"Makuhita\", types: [\"Fighting\"] },\n      { num: 297, species: \"Hariyama\", types: [\"Fighting\"] },\n      { num: 298, species: \"Azurill\", types: [\"Normal\", \"Fairy\"] },\n      { num: 299, species: \"Nosepass\", types: [\"Rock\"] },\n      { num: 300, species: \"Skitty\", types: [\"Normal\"] },\n      { num: 301, species: \"Delcatty\", types: [\"Normal\"] },\n      { num: 302, species: \"Sableye\", types: [\"Dark\", \"Ghost\"] },\n      { num: 303, species: \"Mawile\", types: [\"Steel\", \"Fairy\"] },\n      { num: 304, species: \"Aron\", types: [\"Steel\", \"Rock\"] },\n      { num: 305, species: \"Lairon\", types: [\"Steel\", \"Rock\"] },\n      { num: 306, species: \"Aggron\", types: [\"Steel\", \"Rock\"] },\n      { num: 307, species: \"Meditite\", types: [\"Fighting\", \"Psychic\"] },\n      { num: 308, species: \"Medicham\", types: [\"Fighting\", \"Psychic\"] },\n      { num: 309, species: \"Electrike\", types: [\"Electric\"] },\n      { num: 310, species: \"Manectric\", types: [\"Electric\"] },\n      { num: 311, species: \"Plusle\", types: [\"Electric\"] },\n      { num: 312, species: \"Minun\", types: [\"Electric\"] },\n      { num: 313, species: \"Volbeat\", types: [\"Bug\"] },\n      { num: 314, species: \"Illumise\", types: [\"Bug\"] },\n      { num: 315, species: \"Roselia\", types: [\"Grass\", \"Poison\"] },\n      { num: 316, species: \"Gulpin\", types: [\"Poison\"] },\n      { num: 317, species: \"Swalot\", types: [\"Poison\"] },\n      { num: 318, species: \"Carvanha\", types: [\"Water\", \"Dark\"] },\n      { num: 319, species: \"Sharpedo\", types: [\"Water\", \"Dark\"] },\n      { num: 320, species: \"Wailmer\", types: [\"Water\"] },\n      { num: 321, species: \"Wailord\", types: [\"Water\"] },\n      { num: 322, species: \"Numel\", types: [\"Fire\", \"Ground\"] },\n      { num: 323, species: \"Camerupt\", types: [\"Fire\", \"Ground\"] },\n      { num: 324, species: \"Torkoal\", types: [\"Fire\"] },\n      { num: 325, species: \"Spoink\", types: [\"Psychic\"] },\n      { num: 326, species: \"Grumpig\", types: [\"Psychic\"] },\n      { num: 327, species: \"Spinda\", types: [\"Normal\"] },\n      { num: 328, species: \"Trapinch\", types: [\"Ground\"] },\n      { num: 329, species: \"Vibrava\", types: [\"Ground\", \"Dragon\"] },\n      { num: 330, species: \"Flygon\", types: [\"Ground\", \"Dragon\"] },\n      { num: 331, species: \"Cacnea\", types: [\"Grass\"] },\n      { num: 332, species: \"Cacturne\", types: [\"Grass\", \"Dark\"] },\n      { num: 333, species: \"Swablu\", types: [\"Normal\", \"Flying\"] },\n      { num: 334, species: \"Altaria\", types: [\"Dragon\", \"Flying\"] },\n      { num: 335, species: \"Zangoose\", types: [\"Normal\"] },\n      { num: 336, species: \"Seviper\", types: [\"Poison\"] },\n      { num: 337, species: \"Lunatone\", types: [\"Rock\", \"Psychic\"] },\n      { num: 338, species: \"Solrock\", types: [\"Rock\", \"Psychic\"] },\n      { num: 339, species: \"Barboach\", types: [\"Water\", \"Ground\"] },\n      { num: 340, species: \"Whiscash\", types: [\"Water\", \"Ground\"] },\n      { num: 341, species: \"Corphish\", types: [\"Water\"] },\n      { num: 342, species: \"Crawdaunt\", types: [\"Water\", \"Dark\"] },\n      { num: 343, species: \"Baltoy\", types: [\"Ground\", \"Psychic\"] },\n      { num: 344, species: \"Claydol\", types: [\"Ground\", \"Psychic\"] },\n      { num: 345, species: \"Lileep\", types: [\"Rock\", \"Grass\"] },\n      { num: 346, species: \"Cradily\", types: [\"Rock\", \"Grass\"] },\n      { num: 347, species: \"Anorith\", types: [\"Rock\", \"Bug\"] },\n      { num: 348, species: \"Armaldo\", types: [\"Rock\", \"Bug\"] },\n      { num: 349, species: \"Feebas\", types: [\"Water\"] },\n      { num: 350, species: \"Milotic\", types: [\"Water\"] },\n      { num: 351, species: \"Castform\", types: [\"Normal\"] },\n      { num: 352, species: \"Kecleon\", types: [\"Normal\"] },\n      { num: 353, species: \"Shuppet\", types: [\"Ghost\"] },\n      { num: 354, species: \"Banette\", types: [\"Ghost\"] },\n      { num: 355, species: \"Duskull\", types: [\"Ghost\"] },\n      { num: 356, species: \"Dusclops\", types: [\"Ghost\"] },\n      { num: 357, species: \"Tropius\", types: [\"Grass\", \"Flying\"] },\n      { num: 358, species: \"Chimecho\", types: [\"Psychic\"] },\n      { num: 359, species: \"Absol\", types: [\"Dark\"] },\n      { num: 360, species: \"Wynaut\", types: [\"Psychic\"] },\n      { num: 361, species: \"Snorunt\", types: [\"Ice\"] },\n      { num: 362, species: \"Glalie\", types: [\"Ice\"] },\n      { num: 363, species: \"Spheal\", types: [\"Ice\", \"Water\"] },\n      { num: 364, species: \"Sealeo\", types: [\"Ice\", \"Water\"] },\n      { num: 365, species: \"Walrein\", types: [\"Ice\", \"Water\"] },\n      { num: 366, species: \"Clamperl\", types: [\"Water\"] },\n      { num: 367, species: \"Huntail\", types: [\"Water\"] },\n      { num: 368, species: \"Gorebyss\", types: [\"Water\"] },\n      { num: 369, species: \"Relicanth\", types: [\"Water\", \"Rock\"] },\n      { num: 370, species: \"Luvdisc\", types: [\"Water\"] },\n      { num: 371, species: \"Bagon\", types: [\"Dragon\"] },\n      { num: 372, species: \"Shelgon\", types: [\"Dragon\"] },\n      { num: 373, species: \"Salamence\", types: [\"Dragon\", \"Flying\"] },\n      { num: 374, species: \"Beldum\", types: [\"Steel\", \"Psychic\"] },\n      { num: 375, species: \"Metang\", types: [\"Steel\", \"Psychic\"] },\n      { num: 376, species: \"Metagross\", types: [\"Steel\", \"Psychic\"] },\n      { num: 377, species: \"Regirock\", types: [\"Rock\"] },\n      { num: 378, species: \"Regice\", types: [\"Ice\"] },\n      { num: 379, species: \"Registeel\", types: [\"Steel\"] },\n      { num: 380, species: \"Latias\", types: [\"Dragon\", \"Psychic\"] },\n      { num: 381, species: \"Latios\", types: [\"Dragon\", \"Psychic\"] },\n      { num: 382, species: \"Kyogre\", types: [\"Water\"] },\n      { num: 383, species: \"Groudon\", types: [\"Ground\"] },\n      { num: 384, species: \"Rayquaza\", types: [\"Dragon\", \"Flying\"] },\n      { num: 385, species: \"Jirachi\", types: [\"Steel\", \"Psychic\"] },\n      { num: 386, species: \"Deoxys\", types: [\"Psychic\"] },\n    ],\n  },\n  {\n    title: \"Generation 4\",\n    data: [\n      { num: 387, species: \"Turtwig\", types: [\"Grass\"] },\n      { num: 388, species: \"Grotle\", types: [\"Grass\"] },\n      { num: 389, species: \"Torterra\", types: [\"Grass\", \"Ground\"] },\n      { num: 390, species: \"Chimchar\", types: [\"Fire\"] },\n      { num: 391, species: \"Monferno\", types: [\"Fire\", \"Fighting\"] },\n      { num: 392, species: \"Infernape\", types: [\"Fire\", \"Fighting\"] },\n      { num: 393, species: \"Piplup\", types: [\"Water\"] },\n      { num: 394, species: \"Prinplup\", types: [\"Water\"] },\n      { num: 395, species: \"Empoleon\", types: [\"Water\", \"Steel\"] },\n      { num: 396, species: \"Starly\", types: [\"Normal\", \"Flying\"] },\n      { num: 397, species: \"Staravia\", types: [\"Normal\", \"Flying\"] },\n      { num: 398, species: \"Staraptor\", types: [\"Normal\", \"Flying\"] },\n      { num: 399, species: \"Bidoof\", types: [\"Normal\"] },\n      { num: 400, species: \"Bibarel\", types: [\"Normal\", \"Water\"] },\n      { num: 401, species: \"Kricketot\", types: [\"Bug\"] },\n      { num: 402, species: \"Kricketune\", types: [\"Bug\"] },\n      { num: 403, species: \"Shinx\", types: [\"Electric\"] },\n      { num: 404, species: \"Luxio\", types: [\"Electric\"] },\n      { num: 405, species: \"Luxray\", types: [\"Electric\"] },\n      { num: 406, species: \"Budew\", types: [\"Grass\", \"Poison\"] },\n      { num: 407, species: \"Roserade\", types: [\"Grass\", \"Poison\"] },\n      { num: 408, species: \"Cranidos\", types: [\"Rock\"] },\n      { num: 409, species: \"Rampardos\", types: [\"Rock\"] },\n      { num: 410, species: \"Shieldon\", types: [\"Rock\", \"Steel\"] },\n      { num: 411, species: \"Bastiodon\", types: [\"Rock\", \"Steel\"] },\n      { num: 412, species: \"Burmy\", types: [\"Bug\"] },\n      { num: 413, species: \"Wormadam\", types: [\"Bug\", \"Grass\"] },\n      { num: 414, species: \"Mothim\", types: [\"Bug\", \"Flying\"] },\n      { num: 415, species: \"Combee\", types: [\"Bug\", \"Flying\"] },\n      { num: 416, species: \"Vespiquen\", types: [\"Bug\", \"Flying\"] },\n      { num: 417, species: \"Pachirisu\", types: [\"Electric\"] },\n      { num: 418, species: \"Buizel\", types: [\"Water\"] },\n      { num: 419, species: \"Floatzel\", types: [\"Water\"] },\n      { num: 420, species: \"Cherubi\", types: [\"Grass\"] },\n      { num: 421, species: \"Cherrim\", types: [\"Grass\"] },\n      { num: 422, species: \"Shellos\", types: [\"Water\"] },\n      { num: 423, species: \"Gastrodon\", types: [\"Water\", \"Ground\"] },\n      { num: 424, species: \"Ambipom\", types: [\"Normal\"] },\n      { num: 425, species: \"Drifloon\", types: [\"Ghost\", \"Flying\"] },\n      { num: 426, species: \"Drifblim\", types: [\"Ghost\", \"Flying\"] },\n      { num: 427, species: \"Buneary\", types: [\"Normal\"] },\n      { num: 428, species: \"Lopunny\", types: [\"Normal\"] },\n      { num: 429, species: \"Mismagius\", types: [\"Ghost\"] },\n      { num: 430, species: \"Honchkrow\", types: [\"Dark\", \"Flying\"] },\n      { num: 431, species: \"Glameow\", types: [\"Normal\"] },\n      { num: 432, species: \"Purugly\", types: [\"Normal\"] },\n      { num: 433, species: \"Chingling\", types: [\"Psychic\"] },\n      { num: 434, species: \"Stunky\", types: [\"Poison\", \"Dark\"] },\n      { num: 435, species: \"Skuntank\", types: [\"Poison\", \"Dark\"] },\n      { num: 436, species: \"Bronzor\", types: [\"Steel\", \"Psychic\"] },\n      { num: 437, species: \"Bronzong\", types: [\"Steel\", \"Psychic\"] },\n      { num: 438, species: \"Bonsly\", types: [\"Rock\"] },\n      { num: 439, species: \"Mime Jr.\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 440, species: \"Happiny\", types: [\"Normal\"] },\n      { num: 441, species: \"Chatot\", types: [\"Normal\", \"Flying\"] },\n      { num: 442, species: \"Spiritomb\", types: [\"Ghost\", \"Dark\"] },\n      { num: 443, species: \"Gible\", types: [\"Dragon\", \"Ground\"] },\n      { num: 444, species: \"Gabite\", types: [\"Dragon\", \"Ground\"] },\n      { num: 445, species: \"Garchomp\", types: [\"Dragon\", \"Ground\"] },\n      { num: 446, species: \"Munchlax\", types: [\"Normal\"] },\n      { num: 447, species: \"Riolu\", types: [\"Fighting\"] },\n      { num: 448, species: \"Lucario\", types: [\"Fighting\", \"Steel\"] },\n      { num: 449, species: \"Hippopotas\", types: [\"Ground\"] },\n      { num: 450, species: \"Hippowdon\", types: [\"Ground\"] },\n      { num: 451, species: \"Skorupi\", types: [\"Poison\", \"Bug\"] },\n      { num: 452, species: \"Drapion\", types: [\"Poison\", \"Dark\"] },\n      { num: 453, species: \"Croagunk\", types: [\"Poison\", \"Fighting\"] },\n      { num: 454, species: \"Toxicroak\", types: [\"Poison\", \"Fighting\"] },\n      { num: 455, species: \"Carnivine\", types: [\"Grass\"] },\n      { num: 456, species: \"Finneon\", types: [\"Water\"] },\n      { num: 457, species: \"Lumineon\", types: [\"Water\"] },\n      { num: 458, species: \"Mantyke\", types: [\"Water\", \"Flying\"] },\n      { num: 459, species: \"Snover\", types: [\"Grass\", \"Ice\"] },\n      { num: 460, species: \"Abomasnow\", types: [\"Grass\", \"Ice\"] },\n      { num: 461, species: \"Weavile\", types: [\"Dark\", \"Ice\"] },\n      { num: 462, species: \"Magnezone\", types: [\"Electric\", \"Steel\"] },\n      { num: 463, species: \"Lickilicky\", types: [\"Normal\"] },\n      { num: 464, species: \"Rhyperior\", types: [\"Ground\", \"Rock\"] },\n      { num: 465, species: \"Tangrowth\", types: [\"Grass\"] },\n      { num: 466, species: \"Electivire\", types: [\"Electric\"] },\n      { num: 467, species: \"Magmortar\", types: [\"Fire\"] },\n      { num: 468, species: \"Togekiss\", types: [\"Fairy\", \"Flying\"] },\n      { num: 469, species: \"Yanmega\", types: [\"Bug\", \"Flying\"] },\n      { num: 470, species: \"Leafeon\", types: [\"Grass\"] },\n      { num: 471, species: \"Glaceon\", types: [\"Ice\"] },\n      { num: 472, species: \"Gliscor\", types: [\"Ground\", \"Flying\"] },\n      { num: 473, species: \"Mamoswine\", types: [\"Ice\", \"Ground\"] },\n      { num: 474, species: \"Porygon-Z\", types: [\"Normal\"] },\n      { num: 475, species: \"Gallade\", types: [\"Psychic\", \"Fighting\"] },\n      { num: 476, species: \"Probopass\", types: [\"Rock\", \"Steel\"] },\n      { num: 477, species: \"Dusknoir\", types: [\"Ghost\"] },\n      { num: 478, species: \"Froslass\", types: [\"Ice\", \"Ghost\"] },\n      { num: 479, species: \"Rotom\", types: [\"Electric\", \"Ghost\"] },\n      { num: 480, species: \"Uxie\", types: [\"Psychic\"] },\n      { num: 481, species: \"Mesprit\", types: [\"Psychic\"] },\n      { num: 482, species: \"Azelf\", types: [\"Psychic\"] },\n      { num: 483, species: \"Dialga\", types: [\"Steel\", \"Dragon\"] },\n      { num: 484, species: \"Palkia\", types: [\"Water\", \"Dragon\"] },\n      { num: 485, species: \"Heatran\", types: [\"Fire\", \"Steel\"] },\n      { num: 486, species: \"Regigigas\", types: [\"Normal\"] },\n      { num: 487, species: \"Giratina\", types: [\"Ghost\", \"Dragon\"] },\n      { num: 488, species: \"Cresselia\", types: [\"Psychic\"] },\n      { num: 489, species: \"Phione\", types: [\"Water\"] },\n      { num: 490, species: \"Manaphy\", types: [\"Water\"] },\n      { num: 491, species: \"Darkrai\", types: [\"Dark\"] },\n      { num: 492, species: \"Shaymin\", types: [\"Grass\"] },\n      { num: 493, species: \"Arceus\", types: [\"Normal\"] },\n    ],\n  },\n  {\n    title: \"Generation 5\",\n    data: [\n      { num: 494, species: \"Victini\", types: [\"Psychic\", \"Fire\"] },\n      { num: 495, species: \"Snivy\", types: [\"Grass\"] },\n      { num: 496, species: \"Servine\", types: [\"Grass\"] },\n      { num: 497, species: \"Serperior\", types: [\"Grass\"] },\n      { num: 498, species: \"Tepig\", types: [\"Fire\"] },\n      { num: 499, species: \"Pignite\", types: [\"Fire\", \"Fighting\"] },\n      { num: 500, species: \"Emboar\", types: [\"Fire\", \"Fighting\"] },\n      { num: 501, species: \"Oshawott\", types: [\"Water\"] },\n      { num: 502, species: \"Dewott\", types: [\"Water\"] },\n      { num: 503, species: \"Samurott\", types: [\"Water\"] },\n      { num: 504, species: \"Patrat\", types: [\"Normal\"] },\n      { num: 505, species: \"Watchog\", types: [\"Normal\"] },\n      { num: 506, species: \"Lillipup\", types: [\"Normal\"] },\n      { num: 507, species: \"Herdier\", types: [\"Normal\"] },\n      { num: 508, species: \"Stoutland\", types: [\"Normal\"] },\n      { num: 509, species: \"Purrloin\", types: [\"Dark\"] },\n      { num: 510, species: \"Liepard\", types: [\"Dark\"] },\n      { num: 511, species: \"Pansage\", types: [\"Grass\"] },\n      { num: 512, species: \"Simisage\", types: [\"Grass\"] },\n      { num: 513, species: \"Pansear\", types: [\"Fire\"] },\n      { num: 514, species: \"Simisear\", types: [\"Fire\"] },\n      { num: 515, species: \"Panpour\", types: [\"Water\"] },\n      { num: 516, species: \"Simipour\", types: [\"Water\"] },\n      { num: 517, species: \"Munna\", types: [\"Psychic\"] },\n      { num: 518, species: \"Musharna\", types: [\"Psychic\"] },\n      { num: 519, species: \"Pidove\", types: [\"Normal\", \"Flying\"] },\n      { num: 520, species: \"Tranquill\", types: [\"Normal\", \"Flying\"] },\n      { num: 521, species: \"Unfezant\", types: [\"Normal\", \"Flying\"] },\n      { num: 522, species: \"Blitzle\", types: [\"Electric\"] },\n      { num: 523, species: \"Zebstrika\", types: [\"Electric\"] },\n      { num: 524, species: \"Roggenrola\", types: [\"Rock\"] },\n      { num: 525, species: \"Boldore\", types: [\"Rock\"] },\n      { num: 526, species: \"Gigalith\", types: [\"Rock\"] },\n      { num: 527, species: \"Woobat\", types: [\"Psychic\", \"Flying\"] },\n      { num: 528, species: \"Swoobat\", types: [\"Psychic\", \"Flying\"] },\n      { num: 529, species: \"Drilbur\", types: [\"Ground\"] },\n      { num: 530, species: \"Excadrill\", types: [\"Ground\", \"Steel\"] },\n      { num: 531, species: \"Audino\", types: [\"Normal\"] },\n      { num: 532, species: \"Timburr\", types: [\"Fighting\"] },\n      { num: 533, species: \"Gurdurr\", types: [\"Fighting\"] },\n      { num: 534, species: \"Conkeldurr\", types: [\"Fighting\"] },\n      { num: 535, species: \"Tympole\", types: [\"Water\"] },\n      { num: 536, species: \"Palpitoad\", types: [\"Water\", \"Ground\"] },\n      { num: 537, species: \"Seismitoad\", types: [\"Water\", \"Ground\"] },\n      { num: 538, species: \"Throh\", types: [\"Fighting\"] },\n      { num: 539, species: \"Sawk\", types: [\"Fighting\"] },\n      { num: 540, species: \"Sewaddle\", types: [\"Bug\", \"Grass\"] },\n      { num: 541, species: \"Swadloon\", types: [\"Bug\", \"Grass\"] },\n      { num: 542, species: \"Leavanny\", types: [\"Bug\", \"Grass\"] },\n      { num: 543, species: \"Venipede\", types: [\"Bug\", \"Poison\"] },\n      { num: 544, species: \"Whirlipede\", types: [\"Bug\", \"Poison\"] },\n      { num: 545, species: \"Scolipede\", types: [\"Bug\", \"Poison\"] },\n      { num: 546, species: \"Cottonee\", types: [\"Grass\", \"Fairy\"] },\n      { num: 547, species: \"Whimsicott\", types: [\"Grass\", \"Fairy\"] },\n      { num: 548, species: \"Petilil\", types: [\"Grass\"] },\n      { num: 549, species: \"Lilligant\", types: [\"Grass\"] },\n      { num: 550, species: \"Basculin\", types: [\"Water\"] },\n      { num: 551, species: \"Sandile\", types: [\"Ground\", \"Dark\"] },\n      { num: 552, species: \"Krokorok\", types: [\"Ground\", \"Dark\"] },\n      { num: 553, species: \"Krookodile\", types: [\"Ground\", \"Dark\"] },\n      { num: 554, species: \"Darumaka\", types: [\"Fire\"] },\n      { num: 555, species: \"Darmanitan\", types: [\"Fire\"] },\n      { num: 556, species: \"Maractus\", types: [\"Grass\"] },\n      { num: 557, species: \"Dwebble\", types: [\"Bug\", \"Rock\"] },\n      { num: 558, species: \"Crustle\", types: [\"Bug\", \"Rock\"] },\n      { num: 559, species: \"Scraggy\", types: [\"Dark\", \"Fighting\"] },\n      { num: 560, species: \"Scrafty\", types: [\"Dark\", \"Fighting\"] },\n      { num: 561, species: \"Sigilyph\", types: [\"Psychic\", \"Flying\"] },\n      { num: 562, species: \"Yamask\", types: [\"Ghost\"] },\n      { num: 563, species: \"Cofagrigus\", types: [\"Ghost\"] },\n      { num: 564, species: \"Tirtouga\", types: [\"Water\", \"Rock\"] },\n      { num: 565, species: \"Carracosta\", types: [\"Water\", \"Rock\"] },\n      { num: 566, species: \"Archen\", types: [\"Rock\", \"Flying\"] },\n      { num: 567, species: \"Archeops\", types: [\"Rock\", \"Flying\"] },\n      { num: 568, species: \"Trubbish\", types: [\"Poison\"] },\n      { num: 569, species: \"Garbodor\", types: [\"Poison\"] },\n      { num: 570, species: \"Zorua\", types: [\"Dark\"] },\n      { num: 571, species: \"Zoroark\", types: [\"Dark\"] },\n      { num: 572, species: \"Minccino\", types: [\"Normal\"] },\n      { num: 573, species: \"Cinccino\", types: [\"Normal\"] },\n      { num: 574, species: \"Gothita\", types: [\"Psychic\"] },\n      { num: 575, species: \"Gothorita\", types: [\"Psychic\"] },\n      { num: 576, species: \"Gothitelle\", types: [\"Psychic\"] },\n      { num: 577, species: \"Solosis\", types: [\"Psychic\"] },\n      { num: 578, species: \"Duosion\", types: [\"Psychic\"] },\n      { num: 579, species: \"Reuniclus\", types: [\"Psychic\"] },\n      { num: 580, species: \"Ducklett\", types: [\"Water\", \"Flying\"] },\n      { num: 581, species: \"Swanna\", types: [\"Water\", \"Flying\"] },\n      { num: 582, species: \"Vanillite\", types: [\"Ice\"] },\n      { num: 583, species: \"Vanillish\", types: [\"Ice\"] },\n      { num: 584, species: \"Vanilluxe\", types: [\"Ice\"] },\n      { num: 585, species: \"Deerling\", types: [\"Normal\", \"Grass\"] },\n      { num: 586, species: \"Sawsbuck\", types: [\"Normal\", \"Grass\"] },\n      { num: 587, species: \"Emolga\", types: [\"Electric\", \"Flying\"] },\n      { num: 588, species: \"Karrablast\", types: [\"Bug\"] },\n      { num: 589, species: \"Escavalier\", types: [\"Bug\", \"Steel\"] },\n      { num: 590, species: \"Foongus\", types: [\"Grass\", \"Poison\"] },\n      { num: 591, species: \"Amoonguss\", types: [\"Grass\", \"Poison\"] },\n      { num: 592, species: \"Frillish\", types: [\"Water\", \"Ghost\"] },\n      { num: 593, species: \"Jellicent\", types: [\"Water\", \"Ghost\"] },\n      { num: 594, species: \"Alomomola\", types: [\"Water\"] },\n      { num: 595, species: \"Joltik\", types: [\"Bug\", \"Electric\"] },\n      { num: 596, species: \"Galvantula\", types: [\"Bug\", \"Electric\"] },\n      { num: 597, species: \"Ferroseed\", types: [\"Grass\", \"Steel\"] },\n      { num: 598, species: \"Ferrothorn\", types: [\"Grass\", \"Steel\"] },\n      { num: 599, species: \"Klink\", types: [\"Steel\"] },\n      { num: 600, species: \"Klang\", types: [\"Steel\"] },\n      { num: 601, species: \"Klinklang\", types: [\"Steel\"] },\n      { num: 602, species: \"Tynamo\", types: [\"Electric\"] },\n      { num: 603, species: \"Eelektrik\", types: [\"Electric\"] },\n      { num: 604, species: \"Eelektross\", types: [\"Electric\"] },\n      { num: 605, species: \"Elgyem\", types: [\"Psychic\"] },\n      { num: 606, species: \"Beheeyem\", types: [\"Psychic\"] },\n      { num: 607, species: \"Litwick\", types: [\"Ghost\", \"Fire\"] },\n      { num: 608, species: \"Lampent\", types: [\"Ghost\", \"Fire\"] },\n      { num: 609, species: \"Chandelure\", types: [\"Ghost\", \"Fire\"] },\n      { num: 610, species: \"Axew\", types: [\"Dragon\"] },\n      { num: 611, species: \"Fraxure\", types: [\"Dragon\"] },\n      { num: 612, species: \"Haxorus\", types: [\"Dragon\"] },\n      { num: 613, species: \"Cubchoo\", types: [\"Ice\"] },\n      { num: 614, species: \"Beartic\", types: [\"Ice\"] },\n      { num: 615, species: \"Cryogonal\", types: [\"Ice\"] },\n      { num: 616, species: \"Shelmet\", types: [\"Bug\"] },\n      { num: 617, species: \"Accelgor\", types: [\"Bug\"] },\n      { num: 618, species: \"Stunfisk\", types: [\"Ground\", \"Electric\"] },\n      { num: 619, species: \"Mienfoo\", types: [\"Fighting\"] },\n      { num: 620, species: \"Mienshao\", types: [\"Fighting\"] },\n      { num: 621, species: \"Druddigon\", types: [\"Dragon\"] },\n      { num: 622, species: \"Golett\", types: [\"Ground\", \"Ghost\"] },\n      { num: 623, species: \"Golurk\", types: [\"Ground\", \"Ghost\"] },\n      { num: 624, species: \"Pawniard\", types: [\"Dark\", \"Steel\"] },\n      { num: 625, species: \"Bisharp\", types: [\"Dark\", \"Steel\"] },\n      { num: 626, species: \"Bouffalant\", types: [\"Normal\"] },\n      { num: 627, species: \"Rufflet\", types: [\"Normal\", \"Flying\"] },\n      { num: 628, species: \"Braviary\", types: [\"Normal\", \"Flying\"] },\n      { num: 629, species: \"Vullaby\", types: [\"Dark\", \"Flying\"] },\n      { num: 630, species: \"Mandibuzz\", types: [\"Dark\", \"Flying\"] },\n      { num: 631, species: \"Heatmor\", types: [\"Fire\"] },\n      { num: 632, species: \"Durant\", types: [\"Bug\", \"Steel\"] },\n      { num: 633, species: \"Deino\", types: [\"Dark\", \"Dragon\"] },\n      { num: 634, species: \"Zweilous\", types: [\"Dark\", \"Dragon\"] },\n      { num: 635, species: \"Hydreigon\", types: [\"Dark\", \"Dragon\"] },\n      { num: 636, species: \"Larvesta\", types: [\"Bug\", \"Fire\"] },\n      { num: 637, species: \"Volcarona\", types: [\"Bug\", \"Fire\"] },\n      { num: 638, species: \"Cobalion\", types: [\"Steel\", \"Fighting\"] },\n      { num: 639, species: \"Terrakion\", types: [\"Rock\", \"Fighting\"] },\n      { num: 640, species: \"Virizion\", types: [\"Grass\", \"Fighting\"] },\n      { num: 641, species: \"Tornadus\", types: [\"Flying\"] },\n      { num: 642, species: \"Thundurus\", types: [\"Electric\", \"Flying\"] },\n      { num: 643, species: \"Reshiram\", types: [\"Dragon\", \"Fire\"] },\n      { num: 644, species: \"Zekrom\", types: [\"Dragon\", \"Electric\"] },\n      { num: 645, species: \"Landorus\", types: [\"Ground\", \"Flying\"] },\n      { num: 646, species: \"Kyurem\", types: [\"Dragon\", \"Ice\"] },\n      { num: 647, species: \"Keldeo\", types: [\"Water\", \"Fighting\"] },\n      { num: 648, species: \"Meloetta\", types: [\"Normal\", \"Psychic\"] },\n      { num: 649, species: \"Genesect\", types: [\"Bug\", \"Steel\"] },\n    ],\n  },\n  {\n    title: \"Generation 6\",\n    data: [\n      { num: 650, species: \"Chespin\", types: [\"Grass\"] },\n      { num: 651, species: \"Quilladin\", types: [\"Grass\"] },\n      { num: 652, species: \"Chesnaught\", types: [\"Grass\", \"Fighting\"] },\n      { num: 653, species: \"Fennekin\", types: [\"Fire\"] },\n      { num: 654, species: \"Braixen\", types: [\"Fire\"] },\n      { num: 655, species: \"Delphox\", types: [\"Fire\", \"Psychic\"] },\n      { num: 656, species: \"Froakie\", types: [\"Water\"] },\n      { num: 657, species: \"Frogadier\", types: [\"Water\"] },\n      { num: 658, species: \"Greninja\", types: [\"Water\", \"Dark\"] },\n      { num: 659, species: \"Bunnelby\", types: [\"Normal\"] },\n      { num: 660, species: \"Diggersby\", types: [\"Normal\", \"Ground\"] },\n      { num: 661, species: \"Fletchling\", types: [\"Normal\", \"Flying\"] },\n      { num: 662, species: \"Fletchinder\", types: [\"Fire\", \"Flying\"] },\n      { num: 663, species: \"Talonflame\", types: [\"Fire\", \"Flying\"] },\n      { num: 664, species: \"Scatterbug\", types: [\"Bug\"] },\n      { num: 665, species: \"Spewpa\", types: [\"Bug\"] },\n      { num: 666, species: \"Vivillon\", types: [\"Bug\", \"Flying\"] },\n      { num: 667, species: \"Litleo\", types: [\"Fire\", \"Normal\"] },\n      { num: 668, species: \"Pyroar\", types: [\"Fire\", \"Normal\"] },\n      { num: 669, species: \"Flabébé\", types: [\"Fairy\"] },\n      { num: 670, species: \"Floette\", types: [\"Fairy\"] },\n      { num: 671, species: \"Florges\", types: [\"Fairy\"] },\n      { num: 672, species: \"Skiddo\", types: [\"Grass\"] },\n      { num: 673, species: \"Gogoat\", types: [\"Grass\"] },\n      { num: 674, species: \"Pancham\", types: [\"Fighting\"] },\n      { num: 675, species: \"Pangoro\", types: [\"Fighting\", \"Dark\"] },\n      { num: 676, species: \"Furfrou\", types: [\"Normal\"] },\n      { num: 677, species: \"Espurr\", types: [\"Psychic\"] },\n      { num: 678, species: \"Meowstic\", types: [\"Psychic\"] },\n      { num: 679, species: \"Honedge\", types: [\"Steel\", \"Ghost\"] },\n      { num: 680, species: \"Doublade\", types: [\"Steel\", \"Ghost\"] },\n      { num: 681, species: \"Aegislash\", types: [\"Steel\", \"Ghost\"] },\n      { num: 682, species: \"Spritzee\", types: [\"Fairy\"] },\n      { num: 683, species: \"Aromatisse\", types: [\"Fairy\"] },\n      { num: 684, species: \"Swirlix\", types: [\"Fairy\"] },\n      { num: 685, species: \"Slurpuff\", types: [\"Fairy\"] },\n      { num: 686, species: \"Inkay\", types: [\"Dark\", \"Psychic\"] },\n      { num: 687, species: \"Malamar\", types: [\"Dark\", \"Psychic\"] },\n      { num: 688, species: \"Binacle\", types: [\"Rock\", \"Water\"] },\n      { num: 689, species: \"Barbaracle\", types: [\"Rock\", \"Water\"] },\n      { num: 690, species: \"Skrelp\", types: [\"Poison\", \"Water\"] },\n      { num: 691, species: \"Dragalge\", types: [\"Poison\", \"Dragon\"] },\n      { num: 692, species: \"Clauncher\", types: [\"Water\"] },\n      { num: 693, species: \"Clawitzer\", types: [\"Water\"] },\n      { num: 694, species: \"Helioptile\", types: [\"Electric\", \"Normal\"] },\n      { num: 695, species: \"Heliolisk\", types: [\"Electric\", \"Normal\"] },\n      { num: 696, species: \"Tyrunt\", types: [\"Rock\", \"Dragon\"] },\n      { num: 697, species: \"Tyrantrum\", types: [\"Rock\", \"Dragon\"] },\n      { num: 698, species: \"Amaura\", types: [\"Rock\", \"Ice\"] },\n      { num: 699, species: \"Aurorus\", types: [\"Rock\", \"Ice\"] },\n      { num: 700, species: \"Sylveon\", types: [\"Fairy\"] },\n      { num: 701, species: \"Hawlucha\", types: [\"Fighting\", \"Flying\"] },\n      { num: 702, species: \"Dedenne\", types: [\"Electric\", \"Fairy\"] },\n      { num: 703, species: \"Carbink\", types: [\"Rock\", \"Fairy\"] },\n      { num: 704, species: \"Goomy\", types: [\"Dragon\"] },\n      { num: 705, species: \"Sliggoo\", types: [\"Dragon\"] },\n      { num: 706, species: \"Goodra\", types: [\"Dragon\"] },\n      { num: 707, species: \"Klefki\", types: [\"Steel\", \"Fairy\"] },\n      { num: 708, species: \"Phantump\", types: [\"Ghost\", \"Grass\"] },\n      { num: 709, species: \"Trevenant\", types: [\"Ghost\", \"Grass\"] },\n      { num: 710, species: \"Pumpkaboo\", types: [\"Ghost\", \"Grass\"] },\n      { num: 711, species: \"Gourgeist\", types: [\"Ghost\", \"Grass\"] },\n      { num: 712, species: \"Bergmite\", types: [\"Ice\"] },\n      { num: 713, species: \"Avalugg\", types: [\"Ice\"] },\n      { num: 714, species: \"Noibat\", types: [\"Flying\", \"Dragon\"] },\n      { num: 715, species: \"Noivern\", types: [\"Flying\", \"Dragon\"] },\n      { num: 716, species: \"Xerneas\", types: [\"Fairy\"] },\n      { num: 717, species: \"Yveltal\", types: [\"Dark\", \"Flying\"] },\n      { num: 718, species: \"Zygarde\", types: [\"Dragon\", \"Ground\"] },\n      { num: 719, species: \"Diancie\", types: [\"Rock\", \"Fairy\"] },\n      { num: 720, species: \"Hoopa\", types: [\"Psychic\", \"Ghost\"] },\n      { num: 721, species: \"Volcanion\", types: [\"Fire\", \"Water\"] },\n    ],\n  },\n  {\n    title: \"Generation 7\",\n    data: [\n      { num: 722, species: \"Rowlet\", types: [\"Grass\", \"Flying\"] },\n      { num: 723, species: \"Dartrix\", types: [\"Grass\", \"Flying\"] },\n      { num: 724, species: \"Decidueye\", types: [\"Grass\", \"Ghost\"] },\n      { num: 725, species: \"Litten\", types: [\"Fire\"] },\n      { num: 726, species: \"Torracat\", types: [\"Fire\"] },\n      { num: 727, species: \"Incineroar\", types: [\"Fire\", \"Dark\"] },\n      { num: 728, species: \"Popplio\", types: [\"Water\"] },\n      { num: 729, species: \"Brionne\", types: [\"Water\"] },\n      { num: 730, species: \"Primarina\", types: [\"Water\", \"Fairy\"] },\n      { num: 731, species: \"Pikipek\", types: [\"Normal\", \"Flying\"] },\n      { num: 732, species: \"Trumbeak\", types: [\"Normal\", \"Flying\"] },\n      { num: 733, species: \"Toucannon\", types: [\"Normal\", \"Flying\"] },\n      { num: 734, species: \"Yungoos\", types: [\"Normal\"] },\n      { num: 735, species: \"Gumshoos\", types: [\"Normal\"] },\n      { num: 736, species: \"Grubbin\", types: [\"Bug\"] },\n      { num: 737, species: \"Charjabug\", types: [\"Bug\", \"Electric\"] },\n      { num: 738, species: \"Vikavolt\", types: [\"Bug\", \"Electric\"] },\n      { num: 739, species: \"Crabrawler\", types: [\"Fighting\"] },\n      { num: 740, species: \"Crabominable\", types: [\"Fighting\", \"Ice\"] },\n      { num: 741, species: \"Oricorio\", types: [\"Fire\", \"Flying\"] },\n      { num: 742, species: \"Cutiefly\", types: [\"Bug\", \"Fairy\"] },\n      { num: 743, species: \"Ribombee\", types: [\"Bug\", \"Fairy\"] },\n      { num: 744, species: \"Rockruff\", types: [\"Rock\"] },\n      { num: 745, species: \"Lycanroc\", types: [\"Rock\"] },\n      { num: 746, species: \"Wishiwashi\", types: [\"Water\"] },\n      { num: 747, species: \"Mareanie\", types: [\"Poison\", \"Water\"] },\n      { num: 748, species: \"Toxapex\", types: [\"Poison\", \"Water\"] },\n      { num: 749, species: \"Mudbray\", types: [\"Ground\"] },\n      { num: 750, species: \"Mudsdale\", types: [\"Ground\"] },\n      { num: 751, species: \"Dewpider\", types: [\"Water\", \"Bug\"] },\n      { num: 752, species: \"Araquanid\", types: [\"Water\", \"Bug\"] },\n      { num: 753, species: \"Fomantis\", types: [\"Grass\"] },\n      { num: 754, species: \"Lurantis\", types: [\"Grass\"] },\n      { num: 755, species: \"Morelull\", types: [\"Grass\", \"Fairy\"] },\n      { num: 756, species: \"Shiinotic\", types: [\"Grass\", \"Fairy\"] },\n      { num: 757, species: \"Salandit\", types: [\"Poison\", \"Fire\"] },\n      { num: 758, species: \"Salazzle\", types: [\"Poison\", \"Fire\"] },\n      { num: 759, species: \"Stufful\", types: [\"Normal\", \"Fighting\"] },\n      { num: 760, species: \"Bewear\", types: [\"Normal\", \"Fighting\"] },\n      { num: 761, species: \"Bounsweet\", types: [\"Grass\"] },\n      { num: 762, species: \"Steenee\", types: [\"Grass\"] },\n      { num: 763, species: \"Tsareena\", types: [\"Grass\"] },\n      { num: 764, species: \"Comfey\", types: [\"Fairy\"] },\n      { num: 765, species: \"Oranguru\", types: [\"Normal\", \"Psychic\"] },\n      { num: 766, species: \"Passimian\", types: [\"Fighting\"] },\n      { num: 767, species: \"Wimpod\", types: [\"Bug\", \"Water\"] },\n      { num: 768, species: \"Golisopod\", types: [\"Bug\", \"Water\"] },\n      { num: 769, species: \"Sandygast\", types: [\"Ghost\", \"Ground\"] },\n      { num: 770, species: \"Palossand\", types: [\"Ghost\", \"Ground\"] },\n      { num: 771, species: \"Pyukumuku\", types: [\"Water\"] },\n      { num: 772, species: \"Type: Null\", types: [\"Normal\"] },\n      { num: 773, species: \"Silvally\", types: [\"Normal\"] },\n      { num: 774, species: \"Minior\", types: [\"Rock\", \"Flying\"] },\n      { num: 775, species: \"Komala\", types: [\"Normal\"] },\n      { num: 776, species: \"Turtonator\", types: [\"Fire\", \"Dragon\"] },\n      { num: 777, species: \"Togedemaru\", types: [\"Electric\", \"Steel\"] },\n      { num: 778, species: \"Mimikyu\", types: [\"Ghost\", \"Fairy\"] },\n      { num: 779, species: \"Bruxish\", types: [\"Water\", \"Psychic\"] },\n      { num: 780, species: \"Drampa\", types: [\"Normal\", \"Dragon\"] },\n      { num: 781, species: \"Dhelmise\", types: [\"Ghost\", \"Grass\"] },\n      { num: 782, species: \"Jangmo-o\", types: [\"Dragon\"] },\n      { num: 783, species: \"Hakamo-o\", types: [\"Dragon\", \"Fighting\"] },\n      { num: 784, species: \"Kommo-o\", types: [\"Dragon\", \"Fighting\"] },\n      { num: 785, species: \"Tapu Koko\", types: [\"Electric\", \"Fairy\"] },\n      { num: 786, species: \"Tapu Lele\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 787, species: \"Tapu Bulu\", types: [\"Grass\", \"Fairy\"] },\n      { num: 788, species: \"Tapu Fini\", types: [\"Water\", \"Fairy\"] },\n      { num: 789, species: \"Cosmog\", types: [\"Psychic\"] },\n      { num: 790, species: \"Cosmoem\", types: [\"Psychic\"] },\n      { num: 791, species: \"Solgaleo\", types: [\"Psychic\", \"Steel\"] },\n      { num: 792, species: \"Lunala\", types: [\"Psychic\", \"Ghost\"] },\n      { num: 793, species: \"Nihilego\", types: [\"Rock\", \"Poison\"] },\n      { num: 794, species: \"Buzzwole\", types: [\"Bug\", \"Fighting\"] },\n      { num: 795, species: \"Pheromosa\", types: [\"Bug\", \"Fighting\"] },\n      { num: 796, species: \"Xurkitree\", types: [\"Electric\"] },\n      { num: 797, species: \"Celesteela\", types: [\"Steel\", \"Flying\"] },\n      { num: 798, species: \"Kartana\", types: [\"Grass\", \"Steel\"] },\n      { num: 799, species: \"Guzzlord\", types: [\"Dark\", \"Dragon\"] },\n      { num: 800, species: \"Necrozma\", types: [\"Psychic\"] },\n      { num: 801, species: \"Magearna\", types: [\"Steel\", \"Fairy\"] },\n      { num: 802, species: \"Marshadow\", types: [\"Fighting\", \"Ghost\"] },\n      { num: 803, species: \"Poipole\", types: [\"Poison\"] },\n      { num: 804, species: \"Naganadel\", types: [\"Poison\", \"Dragon\"] },\n      { num: 805, species: \"Stakataka\", types: [\"Rock\", \"Steel\"] },\n      { num: 806, species: \"Blacephalon\", types: [\"Fire\", \"Ghost\"] },\n      { num: 807, species: \"Zeraora\", types: [\"Electric\"] },\n      { num: 808, species: \"Meltan\", types: [\"Steel\"] },\n      { num: 809, species: \"Melmetal\", types: [\"Steel\"] },\n    ],\n  },\n  {\n    title: \"Generation 8\",\n    data: [\n      { num: 810, species: \"Grookey\", types: [\"Grass\"] },\n      { num: 811, species: \"Thwackey\", types: [\"Grass\"] },\n      { num: 812, species: \"Rillaboom\", types: [\"Grass\"] },\n      { num: 813, species: \"Scorbunny\", types: [\"Fire\"] },\n      { num: 814, species: \"Raboot\", types: [\"Fire\"] },\n      { num: 815, species: \"Cinderace\", types: [\"Fire\"] },\n      { num: 816, species: \"Sobble\", types: [\"Water\"] },\n      { num: 817, species: \"Drizzile\", types: [\"Water\"] },\n      { num: 818, species: \"Inteleon\", types: [\"Water\"] },\n      { num: 819, species: \"Skwovet\", types: [\"Normal\"] },\n      { num: 820, species: \"Greedent\", types: [\"Normal\"] },\n      { num: 821, species: \"Rookidee\", types: [\"Flying\"] },\n      { num: 822, species: \"Corvisquire\", types: [\"Flying\"] },\n      { num: 823, species: \"Corviknight\", types: [\"Flying\", \"Steel\"] },\n      { num: 824, species: \"Blipbug\", types: [\"Bug\"] },\n      { num: 825, species: \"Dottler\", types: [\"Bug\", \"Psychic\"] },\n      { num: 826, species: \"Orbeetle\", types: [\"Bug\", \"Psychic\"] },\n      { num: 827, species: \"Nickit\", types: [\"Dark\"] },\n      { num: 828, species: \"Thievul\", types: [\"Dark\"] },\n      { num: 829, species: \"Gossifleur\", types: [\"Grass\"] },\n      { num: 830, species: \"Eldegoss\", types: [\"Grass\"] },\n      { num: 831, species: \"Wooloo\", types: [\"Normal\"] },\n      { num: 832, species: \"Dubwool\", types: [\"Normal\"] },\n      { num: 833, species: \"Chewtle\", types: [\"Water\"] },\n      { num: 834, species: \"Drednaw\", types: [\"Water\", \"Rock\"] },\n      { num: 835, species: \"Yamper\", types: [\"Electric\"] },\n      { num: 836, species: \"Boltund\", types: [\"Electric\"] },\n      { num: 837, species: \"Rolycoly\", types: [\"Rock\"] },\n      { num: 838, species: \"Carkol\", types: [\"Rock\", \"Fire\"] },\n      { num: 839, species: \"Coalossal\", types: [\"Rock\", \"Fire\"] },\n      { num: 840, species: \"Applin\", types: [\"Grass\", \"Dragon\"] },\n      { num: 841, species: \"Flapple\", types: [\"Grass\", \"Dragon\"] },\n      { num: 842, species: \"Appletun\", types: [\"Grass\", \"Dragon\"] },\n      { num: 843, species: \"Silicobra\", types: [\"Ground\"] },\n      { num: 844, species: \"Sandaconda\", types: [\"Ground\"] },\n      { num: 845, species: \"Cramorant\", types: [\"Flying\", \"Water\"] },\n      { num: 846, species: \"Arrokuda\", types: [\"Water\"] },\n      { num: 847, species: \"Barraskewda\", types: [\"Water\"] },\n      { num: 848, species: \"Toxel\", types: [\"Electric\", \"Poison\"] },\n      { num: 849, species: \"Toxtricity\", types: [\"Electric\", \"Poison\"] },\n      { num: 850, species: \"Sizzlipede\", types: [\"Fire\", \"Bug\"] },\n      { num: 851, species: \"Centiskorch\", types: [\"Fire\", \"Bug\"] },\n      { num: 852, species: \"Clobbopus\", types: [\"Fighting\"] },\n      { num: 853, species: \"Grapploct\", types: [\"Fighting\"] },\n      { num: 854, species: \"Sinistea\", types: [\"Ghost\"] },\n      { num: 855, species: \"Polteageist\", types: [\"Ghost\"] },\n      { num: 856, species: \"Hatenna\", types: [\"Psychic\"] },\n      { num: 857, species: \"Hattrem\", types: [\"Psychic\"] },\n      { num: 858, species: \"Hatterene\", types: [\"Psychic\", \"Fairy\"] },\n      { num: 859, species: \"Impidimp\", types: [\"Dark\", \"Fairy\"] },\n      { num: 860, species: \"Morgrem\", types: [\"Dark\", \"Fairy\"] },\n      { num: 861, species: \"Grimmsnarl\", types: [\"Dark\", \"Fairy\"] },\n      { num: 862, species: \"Obstagoon\", types: [\"Dark\", \"Normal\"] },\n      { num: 863, species: \"Perrserker\", types: [\"Steel\"] },\n      { num: 864, species: \"Cursola\", types: [\"Ghost\"] },\n      { num: 865, species: \"Sirfetch'd\", types: [\"Fighting\"] },\n      { num: 866, species: \"Mr. Rime\", types: [\"Ice\", \"Psychic\"] },\n      { num: 867, species: \"Runerigus\", types: [\"Ground\", \"Ghost\"] },\n      { num: 868, species: \"Milcery\", types: [\"Fairy\"] },\n      { num: 869, species: \"Alcremie\", types: [\"Fairy\"] },\n      { num: 870, species: \"Falinks\", types: [\"Fighting\"] },\n      { num: 871, species: \"Pincurchin\", types: [\"Electric\"] },\n      { num: 872, species: \"Snom\", types: [\"Ice\", \"Bug\"] },\n      { num: 873, species: \"Frosmoth\", types: [\"Ice\", \"Bug\"] },\n      { num: 874, species: \"Stonjourner\", types: [\"Rock\"] },\n      { num: 875, species: \"Eiscue\", types: [\"Ice\"] },\n      { num: 876, species: \"Indeedee\", types: [\"Psychic\", \"Normal\"] },\n      { num: 877, species: \"Morpeko\", types: [\"Electric\", \"Dark\"] },\n      { num: 878, species: \"Cufant\", types: [\"Steel\"] },\n      { num: 879, species: \"Copperajah\", types: [\"Steel\"] },\n      { num: 880, species: \"Dracozolt\", types: [\"Electric\", \"Dragon\"] },\n      { num: 881, species: \"Arctozolt\", types: [\"Electric\", \"Ice\"] },\n      { num: 882, species: \"Dracovish\", types: [\"Water\", \"Dragon\"] },\n      { num: 883, species: \"Arctovish\", types: [\"Water\", \"Ice\"] },\n      { num: 884, species: \"Duraludon\", types: [\"Steel\", \"Dragon\"] },\n      { num: 885, species: \"Dreepy\", types: [\"Dragon\", \"Ghost\"] },\n      { num: 886, species: \"Drakloak\", types: [\"Dragon\", \"Ghost\"] },\n      { num: 887, species: \"Dragapult\", types: [\"Dragon\", \"Ghost\"] },\n      { num: 888, species: \"Zacian\", types: [\"Fairy\", \"Steel\"] },\n      { num: 889, species: \"Zamazenta\", types: [\"Fighting\", \"Steel\"] },\n      { num: 890, species: \"Eternatus\", types: [\"Poison\", \"Dragon\"] },\n      { num: 891, species: \"Kubfu\", types: [\"Fighting\"] },\n      { num: 892, species: \"Urshifu\", types: [\"Fighting\", \"Dark\"] },\n      { num: 893, species: \"Zarude\", types: [\"Dark\", \"Grass\"] },\n      { num: 894, species: \"Regieleki\", types: [\"Electric\"] },\n      { num: 895, species: \"Regidrago\", types: [\"Dragon\"] },\n      { num: 896, species: \"Glastrier\", types: [\"Ice\"] },\n      { num: 897, species: \"Spectrier\", types: [\"Ghost\"] },\n      { num: 898, species: \"Calyrex\", types: [\"Psychic\", \"Grass\"] },\n    ],\n  },\n];\n","import * as React from \"react\";\nimport {\n  Image,\n  ScrollView,\n  SectionListData,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport type { Query } from \"@favware/graphql-pokemon\";\nimport { Item, SectionList } from \"../List/SectionList\";\nimport { colors, fontSizes } from \"../../styles/variables\";\nimport { FlavorTexts } from \"./FlavorTexts\";\nimport { getNameWithNum } from \"../../mappers/pokemon\";\nimport { Loading } from \"../Loading/Loading\";\nimport { commonStyles } from \"../../styles/common\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { getPokemonData } from \"./Data\";\nimport { openPokemonScreen } from \"../Navigation/rootNavigation\";\n\nexport const GET_POKEMON_DETAILS_BY_NUM = gql`\n  query Pokemon($num: Int!) {\n    getPokemonDetailsByNumber(pokemon: $num, skip: 0, take: 4, reverse: true) {\n      sprite\n      backSprite\n      num\n      species\n      baseSpecies\n      color\n      weight\n      height\n      types\n      abilities {\n        first\n        second\n        special\n        hidden\n      }\n      flavorTexts {\n        flavor\n        game\n      }\n      baseStats {\n        hp\n        attack\n        defense\n        speed\n        specialattack\n        specialdefense\n      }\n      baseStatsTotal\n      evolutions {\n        num\n        species\n        baseSpecies\n      }\n      preevolutions {\n        num\n        species\n        baseSpecies\n      }\n    }\n  }\n`;\n\ninterface PokemonCardInput {\n  title?: string;\n  num: number;\n}\n\nexport const PokemonCard = ({ num, title }: PokemonCardInput) => {\n  const navigator = useNavigation() as any;\n  const ref: React.MutableRefObject<ScrollView> = React.useRef(null) as any;\n  const isFocused = useIsFocused();\n\n  if (!isFocused) {\n    ref.current?.scrollTo({ y: 0 });\n  }\n\n  const { loading, error, data } = useQuery<Query>(GET_POKEMON_DETAILS_BY_NUM, {\n    variables: {\n      num,\n    },\n  });\n\n  if (loading) {\n    return <Loading />;\n  }\n  if (error) {\n    return (\n      <View style={commonStyles.centeredView}>\n        <Text style={styles.title}>Ops! Pokémon Not Found. Try another!</Text>\n      </View>\n    );\n  }\n  if (!data) {\n    return <Text style={commonStyles.scrollView}>Error! Empty Data</Text>;\n  }\n\n  const pokemon = data.getPokemonDetailsByNumber;\n\n  const list: SectionListData<Item>[] = getPokemonData(pokemon, (number) =>\n    openPokemonScreen(number, navigator)\n  );\n\n  return (\n    <ScrollView testID=\"pokemonCard\" style={commonStyles.scrollView} ref={ref}>\n      {title ? (\n        <Text testID=\"title\" style={styles.title}>\n          {title}\n        </Text>\n      ) : undefined}\n      <View style={styles.view}>\n        <View testID=\"imageViewer\" style={styles.imageViewer}>\n          <Image style={styles.image} source={{ uri: pokemon.sprite }} />\n          <Image style={styles.image} source={{ uri: pokemon.backSprite }} />\n        </View>\n        <Text testID=\"species\" style={styles.species}>\n          {getNameWithNum(pokemon)}\n        </Text>\n        <FlavorTexts flavorTexts={pokemon.flavorTexts} />\n      </View>\n      <SectionList sections={list} />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  view: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  imageViewer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    backgroundColor: colors.imageViewer,\n    width: \"100%\",\n    justifyContent: \"center\",\n    marginBottom: 20,\n    padding: 10,\n    borderRadius: 10,\n    shadowOffset: { width: -1, height: -1 },\n    shadowColor: \"grey\",\n  },\n  image: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\",\n    margin: 20,\n  },\n  title: {\n    color: colors.text,\n    fontSize: fontSizes.xxl,\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  species: {\n    color: colors.text,\n    fontSize: fontSizes.xl,\n    textTransform: \"capitalize\",\n    marginBottom: 20,\n  },\n});\n","import { gql, useLazyQuery } from \"@apollo/client\";\nimport { Query } from \"@favware/graphql-pokemon\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { SectionListData, Text } from \"react-native\";\nimport { StyleSheet, View } from \"react-native\";\nimport {\n  filterPokemonByNumAndMapToItem,\n  filterPokemonByTypeAndMapToItem,\n  filterValidPokemonAndMapToItem,\n  mapGenerationsToSections,\n} from \"../../mappers/pokemon\";\nimport { commonStyles } from \"../../styles/common\";\nimport { colors, fontSizes } from \"../../styles/variables\";\nimport { Item, SectionList } from \"../List/SectionList\";\nimport { Loading } from \"../Loading/Loading\";\nimport { openPokemonScreen } from \"../Navigation/rootNavigation\";\nimport { Pokemon, pokemonGenerations } from \"../Pokemon/Data\";\n\ninterface SearchInput {\n  search: string;\n}\n\nexport const SEARCH_POKEMON_QUERY = gql`\n  query ($search: String!) {\n    getDexEntries(pokemon: $search, reverse: true, take: 20) {\n      num\n      species\n      baseSpecies\n    }\n  }\n`;\n\nexport const Search = ({ search }: SearchInput) => {\n  const navigator = useNavigation();\n  const openPokemon = (pokemon: number) =>\n    openPokemonScreen(pokemon, navigator);\n  const allPokemon = useMemo(\n    () => mapGenerationsToSections(pokemonGenerations, openPokemon),\n    []\n  );\n\n  const [searchPokemon, { called, loading, data, error }] = useLazyQuery<Query>(\n    SEARCH_POKEMON_QUERY,\n    {\n      variables: {\n        search,\n      },\n    }\n  );\n\n  if (search.length < 1) {\n    return renderPokemonList(allPokemon);\n  }\n\n  const numberSearch = parseInt(search);\n\n  if (!isNaN(numberSearch)) {\n    const pokemonByNumber = [\n      {\n        title: \"Results\",\n        data: filterPokemonByNumAndMapToItem(\n          pokemonGenerations,\n          numberSearch,\n          openPokemon\n        ),\n      },\n    ];\n\n    return renderPokemonList(pokemonByNumber);\n  }\n\n  if (!called) {\n    searchPokemon();\n\n    return <Loading />;\n  }\n\n  if (called && loading) return <Loading />;\n  if (called && error)\n    return (\n      <View style={commonStyles.centeredView}>\n        <Text style={styles.searchText}>\n          Ops! No Pokémon found. Try another search!\n        </Text>\n      </View>\n    );\n  if (!data) return <Loading />;\n\n  let pokemonByType: Item[] = [];\n\n  if (search.length > 1) {\n    pokemonByType = filterPokemonByTypeAndMapToItem(\n      pokemonGenerations,\n      search,\n      openPokemon\n    );\n  }\n\n  const queryResultsAndPokemonByType: SectionListData<Item>[] = [\n    {\n      title: \"Results\",\n      data: filterValidPokemonAndMapToItem(\n        data.getDexEntries as unknown as Pokemon[],\n        openPokemon\n      ).concat(pokemonByType),\n    },\n  ];\n\n  return renderPokemonList(queryResultsAndPokemonByType);\n};\n\nconst renderPokemonList = (pokemon: SectionListData<Item>[]) => (\n  <View testID=\"search\" style={commonStyles.listView}>\n    <SectionList native={true} sections={pokemon} />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  searchText: {\n    color: colors.text,\n    fontSize: fontSizes.xl,\n    textAlign: \"center\",\n  },\n});\n","import { createStackNavigator } from \"@react-navigation/stack\";\nimport React from \"react\";\nimport { Routes } from \"../Navigation/routes\";\nimport { PokemonCard } from \"../Pokemon/PokemonCard\";\nimport { Search } from \"./Search\";\n\nconst Stack = createStackNavigator();\n\nexport const Explore = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name={Routes.Search} component={SearchScreen} />\n      <Stack.Screen name={Routes.Pokemon} component={PokemonScreen} />\n    </Stack.Navigator>\n  );\n};\n\nfunction SearchScreen({ route }: { route: any }) {\n  return <Search search={route.params?.search || \"\"} />;\n}\n\nfunction PokemonScreen({ route }: { route: any }) {\n  return <PokemonCard num={route.params?.pokemon || -1} />;\n}\n","import React from \"react\";\nimport { PokemonCard } from \"./PokemonCard\";\nimport { useState } from \"react\";\nimport { Loading } from \"../Loading/Loading\";\nimport { useEffect } from \"react\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { getItem, setItem } from \"../../storage/storage\";\n\nconst POKE_DAY_KEY = \"@poke_day\";\nconst MAX_POKEMON_NUMBER = 898;\n\ninterface PokemonOfTheDayValue {\n  num: number;\n  date: string;\n}\n\nexport const PokemonOfTheDay = () => {\n  const isFocused = useIsFocused();\n\n  let [pokemonOfTheDay, setPokemonOfTheDay] = useState(-1);\n\n  useEffect(() => {\n    getPokemonOfTheDay().then(setPokemonOfTheDay);\n  }, [isFocused]);\n\n  if (pokemonOfTheDay < 0 || !isFocused) {\n    return <Loading />;\n  }\n\n  return <PokemonCard title=\"Pokémon of the Day\" num={pokemonOfTheDay} />;\n};\n\nconst storePokemonOfTheDay = async (num: number) => {\n  try {\n    const data = JSON.stringify({ num, date: new Date().toDateString() });\n    await setItem(POKE_DAY_KEY, data);\n  } catch (e) {}\n};\n\nconst getPokemonOfTheDay = async (): Promise<number> => {\n  try {\n    const data = await getItem(POKE_DAY_KEY);\n\n    if (data !== null) {\n      const parsedData: PokemonOfTheDayValue = JSON.parse(data);\n\n      if (parsedData.date === new Date().toDateString()) {\n        return parsedData.num;\n      }\n    }\n\n    const randomPokemonNum = Math.round(Math.random() * MAX_POKEMON_NUMBER);\n    storePokemonOfTheDay(randomPokemonNum);\n\n    return randomPokemonNum;\n  } catch (e) {}\n\n  return -1;\n};\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const getItem = (key: string): Promise<string | null> =>\n  AsyncStorage.getItem(key);\n\nexport const setItem = (key: string, item: string): Promise<void> =>\n  AsyncStorage.setItem(key, item);\n\nexport const clear = (): Promise<void> => AsyncStorage.clear();\n","import * as React from \"react\";\nimport { StatusBar, StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { client } from \"./src/api/apolloClient\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { colors } from \"./src/styles/variables\";\nimport { Header } from \"./src/components/Header/Header\";\nimport { Explore } from \"./src/components/Explore/Explore\";\nimport { navigationRef } from \"./src/components/Navigation/rootNavigation\";\nimport { Image } from \"react-native\";\nimport { PokemonOfTheDay } from \"./src/components/Pokemon/PokemonOfTheDay\";\nimport { Routes } from \"./src/components/Navigation/routes\";\n\nfunction ExploreScreen() {\n  return <Explore />;\n}\n\nfunction PokemonOfTheDayScreen() {\n  return <PokemonOfTheDay />;\n}\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <ApolloProvider client={client}>\n      <StatusBar animated={true} backgroundColor={colors.background} />\n\n      <NavigationContainer ref={navigationRef}>\n        <Header />\n        <Tab.Navigator\n          tabBarOptions={{\n            activeBackgroundColor: colors.stickyBgColor,\n            inactiveBackgroundColor: colors.background,\n            activeTintColor: colors.text,\n            style: { borderTopColor: colors.shadow },\n            showLabel: false,\n          }}\n          sceneContainerStyle={{\n            backgroundColor: colors.background,\n            flex: 1,\n          }}\n        >\n          <Tab.Screen\n            name={Routes.PokemonOfTheDay}\n            component={PokemonOfTheDayScreen}\n            options={{\n              tabBarTestID: \"tabPokemonOfTheDay\",\n              tabBarIcon: ({ focused }) => (\n                <Image\n                  style={styles.icon}\n                  source={\n                    focused\n                      ? require(\"./assets/star.png\")\n                      : require(\"./assets/star-gray.png\")\n                  }\n                />\n              ),\n            }}\n          />\n          <Tab.Screen\n            name={Routes.Explore}\n            component={ExploreScreen}\n            options={{\n              tabBarTestID: \"tabExplore\",\n              tabBarIcon: ({ focused }) => (\n                <Image\n                  style={styles.icon}\n                  source={\n                    focused\n                      ? require(\"./assets/search.png\")\n                      : require(\"./assets/search-gray.png\")\n                  }\n                />\n              ),\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </ApolloProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: { width: 32, height: 32 },\n});\n","module.exports = __webpack_public_path__ + \"static/media/loading.67ddf3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/star.7c062466.png\";","module.exports = __webpack_public_path__ + \"static/media/star-gray.994d7abb.png\";","module.exports = __webpack_public_path__ + \"static/media/search.04c4b338.png\";","module.exports = __webpack_public_path__ + \"static/media/search-gray.2de2ae54.png\";"],"sourceRoot":""}